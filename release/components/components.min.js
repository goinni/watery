(function(angular) {
  'use strict';
  angular.registerModule('iss.callcenter', ['app']);

})(window.angular);
(function(angular) {
  'use strict';
  angular.registerModule('iss.cascade', ['app']);

})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.courier', ['app']);

})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.datepicker', ['app']);

})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.fragment', ['app']).
  config(function($stateProvider, $urlRouterProvider) {
    $stateProvider
    .state('index.bindingUser', {
        url: '/bindingUser',
        views: {
            'main@index': {
                templateUrl: '/pages/fragment/bindingUser.html',
                controller: 'bindingUser'
            }
        }
    })
  });
})(window.angular);
(function(angular) {
  'use strict';
  angular.registerModule('iss.home', ['app']).
  config(function($stateProvider, $urlRouterProvider) {
      $urlRouterProvider.otherwise('/index/orderlist'); //路径匹配不到时
      $stateProvider
          .state('index', {
              url: '/index',
              views: {
                  '': {
                      templateUrl: 'tpls/index.html'
                  },
                  'topbar@index': {
                      templateUrl: 'tpls/topbar.html'
                  },
                  'main@index': {
                      templateUrl: 'tpls/main.html'
                  }
              }
          })
          
  });


})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.icenter', ['app']);
})(window.angular);


(function(angular) {
    'use strict';
    angular.registerModule('iss.login', ['app']).
    config(function($stateProvider, $urlRouterProvider) {
        $stateProvider
            .state('login', {
                  url: '/login',
                  templateUrl: '/pages/login/login.html'
              })
    });
})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.map', ['app']);
})(window.angular);
(function(angular) {
  'use strict';
  angular.registerModule('iss.navbar', ['app']);
})(window.angular);
(function(angular) {
  'use strict';
  angular.registerModule('iss.order', ['app']).
  config(function($stateProvider, $urlRouterProvider) {
      $stateProvider
          .state('index.orderlist', {
              url: '/orderlist?type&id',
              templateUrl: '/pages/order/list.html'
          })
  });


})(window.angular);


(function(angular) {
    'use strict';
    angular.registerModule('iss.permission', ['app'])
    .run(function($log, PermissionService, LoginService, $window, $rootScope) {
        //从session中获取用户信息
        var entity = LoginService.getUserEntity();
        //刷新页面时如果权限存在设置权限,重新登录时会再次更新权限
        if(entity){
            PermissionService.setUserPermissions(entity.codes);
            //将用户信息放到RootScope下
            $rootScope.SessionUserEntity = entity;
        }else{
            $log.warn('权限不存在-请重新登录');
            $window.location.href="/pages/home/home.html#/login";
        }

    });
})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.searchbar', ['app']);

})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.tabs', ['app']);

})(window.angular);


(function(angular) {
  'use strict';
  angular.registerModule('iss.workorder', ['app']).
  config(function($stateProvider, $urlRouterProvider) {
		$stateProvider
		.state('index.workOrderlist', {
		  url: '/workOrderlist?type&id',
		  templateUrl: '/pages/workorder/list.html'
		})
  });

})(window.angular);
(function(angular) {
  // 'use strict';
  angular.module('iss.callcenter').
  controller("phonebar", ['$scope', '$rootScope', 'UriService','$window', 'AlertService','$timeout',
    function ($scope, $rootScope, UriService, window, alertService, $timeout) {
    /**
     * 通话计时器
     */
    (function(){
        $scope.callTime = "00:00";
        $scope.timeCount = 0; // 值为 -1 时，停止计时.
        $scope.$on('callCenterOnTimer', function(){
            $scope.timeCount = 0; //开始计时
            // 递归处理器
            (function(){
                ++$scope.timeCount;
                var ms = $scope.timeCount%60; 
                    ms = ms<10 ? '0'+ms : ms; //秒
                var min = parseInt($scope.timeCount/60);
                    min = min<10? '0'+min : min; //分
                $scope.callTime = min + ':' + ms;
                if($scope.timeCount){
                    $timeout(arguments.callee, 1000);
                }
            })();
        }); 
    })();
    /**
     * 初始化电话条
     */
    UriService.send({
        url : UriService.action_initPhonebar
    }).then(function(res){
        if(undefined != res.data) {
            hojo.registerModulePath("icallcenter", "/common/edb/js/icallcenter");
            hojo.require("icallcenter.logon");
            hojo.require("hojo.io.script");
            hojo.addOnLoad(function () {
                var loginName = res.data.ticketName;//icallcenter.logon.getUrlValue("loginName");
                var password = res.data.password;//icallcenter.logon.getUrlValue("password");
                var extenType = 'Local';//icallcenter.logon.getUrlValue("loginType");
                console.log("呼叫中心账号",loginName,password, extenType)
                icallcenter.logon.startLogon(loginName, password, extenType);
            });
        }
    });

    /**
     * 来电弹屏
     * @param tel 来电号码
     * @param id 特定工作空间编号 (来电弹屏时的ID必需要包含 'callcenter' )
     */
    window.eject = function(tel, id) {
        if(undefined == id) {
            id = moment().toString();
        }
        $rootScope.addWorkspace({
            id: id,
            name:'工单弹屏[' +tel+ ']',
            active:true,
            isRemove: true,
            content:UriService.page_ticket_eject,
            data:{
                "tel": tel
            }
        });
    };
    /**
     * 来电响玲事件
     * @param tel 来电号码
     */
    $scope.$on('callCenterOnRing', function(event, tel){
        eject(tel, 'callcenter' + moment());
    });
    /**
     * 电话呼出回调
     * @param index 是否成功呼出
     * @param phoneNumber 呼出的电话
     */
    window.dialoutCenterCallback = function(index, phoneNumber){
        var msg = "成功呼出:"+phoneNumber.substring(1);
        if(index){
            //通知开始计时
            $rootScope.$broadcast('callCenterOnTimer');
            alertService.warning(msg);
        }else{
            // $scope.timeCount = -1; //停止计时
            msg = "呼出失败:"+phoneNumber.substring(1)+" , 异常信息："+this.Message;
            alertService.danger(msg, 6000);
        }
    }
    /**
     * 通话结束回调
     * @param data 本次通话信息对象
     */
    window.callCenterOnHangup = function(data){
        callOver();
    }
    /**
     * 主动挂机接口 
     * @param succeed 是否挂机成功
     * PS: this 是挂机操作返回的对象
     */
    window.callCenterDoHangup = function(succeed){
        if(succeed){
            callOver();
        }else{
            console.log(this);
            alertService.warning('挂机失败~');
        }
    }
    //停止通话计时器
    function callOver(){
        $scope.timeCount = -1; //停止计时
        alertService.warning('通话结束~');
    }
    /**
     * 电话呼入事件
     * @param data 呼入信息对象
     */
    window.callCenterOnRing = function(data){
        alertService.warning('亲，电话呼入了哇~');
        //弹屏
        $rootScope.$broadcast('callCenterOnRing', data.originCallNo);
        //通知开始计时
        $rootScope.$broadcast('callCenterOnTimer');
    };

    /**
     * 打电话
     * @param tel 呼出电话号码
     */
    window.dialout = function(tel){
        if(null == softphoneBar) {
            alertService.danger('电话条登录失败');
        }else {
            if($scope.timeCount>0){
                alertService.warning('正在通话中，请稍后再试!',5000);
                return ;
            }
            alertService.success('正呼叫:'+tel);
            softphoneBar.dialout(tel);
        }
    };
    /**
     * 电话条加载完成 - 可以呼入呼出.
     */
    window.loadedPhoneIsOk = function (){
        var busyEntity = sessionStorage._isBusy || "";
        if(busyEntity){
            busyEntity = eval("("+busyEntity+")");
            console.log(busyEntity);
            if(busyEntity.state){
                var n = busyEntity.type;
            }
        }
    };
    /**
     * 电话条异常回调
     */
    window.callCenterHojotoolError = function(message){
        alertService.danger(message);
        //应要求，暂时不处理电话条异常
        // var msg ="座席使用相同的帐号（或相同的分机）登录\n【确定】将刷新页面重新开始 【取消】将退出登录。"
        // if(confirm(msg)){
        //     window.location.reload(true);
        // }else{
        //     $scope.$state.go('login');
        // }
    }
    //Call Back
    window.setBusyCallBack = function(isBusy, busyType){
        sessionStorage._isBusy = "{state: "+isBusy+",type: "+busyType+"}";
    };
    //Dialout Eject
    $scope.dialout = function(tel){
        if(!tel){
            alertService.danger('手机号码不能为空');
            return ;
        }
        dialout(tel);
    };
    //Just Eject
    $scope.eject = function(tel){
        eject(tel);
    };
    //Hangup
    $scope.exit = function(status){
        phone.hangup();
    };
    //Set Status
    $scope.setBusy = function(isBusy, busyType) {
        if(null == phone) {
            alertService.danger('电话条登录失败！');
        }else {
            phone.setBusy(isBusy, busyType);
            // $scope.timeCount = -1; //停止计时
        }
    };
    //Listening Enter
    $scope.inputEnter = function() {
        if(event.keyCode == 13) {
            dialout($scope.tel);
        }
    };
  }]);

})(window.angular);
(function(angular) {
  'use strict';
  angular.module('iss.callcenter').
  directive("call", [function() {
        return {
            restrict : 'AE',
            replace: true,
            scope : {
                ev : '=click',
                tel : '=number'
            },
            template : '<span><font ng-click="ev(tel)">{{tel}}</font><span ng-click="dialout(tel)" class="glyphicon glyphicon-earphone text-primary"></span>',
            link: function(scope, elem, attrs) {
                scope.dialout = function(tel){
                    dialout(tel);
                }
            }
        }
    }]);
})(window.angular);
 /**
  * 级联操作指令
  * <cascade-steps></cascade-steps>
  */
 (function(angular) {
    'use strict';
    angular.module('iss.cascade').
    directive("cascadeSteps", ['$http',
        function($http) {

            return {
                restrict : 'EA',
                replace: true,
                templateUrl : '/pages/cascade/cascade.html',
                link : function(scope, elem, attr) {
                    /**
                     * 监听一级分类变更
                     */
                    scope.$watch('param.qa1',function(newVal){
                        if (newVal){
                            scope['onchangeone'](newVal);
                         }else{
                            scope.list.qa2 = [];
                            scope.list.qa3  =[];
                         }
                    });
                    /**
                     * 监听二级分类变更
                     */
                    scope.$watch('param.qa2',function(newVal){
                        if (newVal){
                            scope['onchangetwo'](newVal);
                         }else{
                             scope.list.qa3  =[];
                         }
                    });
                }
            }
        }]);
})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.cascade').
    service('CascadeService', ['UriService', function (uri) {
        /**
         * 初始化三级级联
         * @param $scope 
         * @param opt =  {
                            url:'请求级联的地址',
                            data:{
                                pid: 0 //必需字段，但也可以不指定，缺省值pid=0,如需其它请求参数也可以在这里写
                            },
                            default:[6,45,99], //数据回显时的默认值,该值与数据 id 对应,注意字段名称
                            resultKey: 'ticketQaGroups' //请求级联数据的返回结果字段名,[注]返回数据格式{data:{resultKey:[...]},status:200}
                        }
         *
         * PS: 使用时要注意，如果是异步加载完数据后再初始三级级联操作时要先在controller 中初始化 $scope.list={} 和 $scope.param = {};
         */
        this.bulidCascadeSteps = function($scope,opt){
                //三级级联数据
                $scope.list = {
                    qa1:[],
                    qa2:[],
                    qa3:[]
                }
                //级联对应的值
                $scope.param = {
                    qa1:'',
                    qa2:'',
                    qa3:''
                }

                //若未指定父ID，缺省值为0,即第一级数据 
                if(typeof opt.data.pid === undefined){
                    opt.data.pid = 0;
                }
                /**
                 * 在这里初始化第一级内容
                 */
                request(opt.url,opt.data,function(data){
                    $scope.list.qa1 = data[opt.resultKey];
                    //初始化回调
                    opt.init && opt.init($scope.list.qa1);
                    //设置第一级默认值
                    setDefaultValue(function(v){
                        $scope.param.qa1 = v;
                    });
                });
                /**
                 * 设置默认值，数据回显时用
                 * 设置一个删除一个，依次调用，默认值最多有三个
                 */
                function setDefaultValue(callback){
                    if(opt.default && opt.default.length){
                        callback && callback(opt.default[0]);
                        opt.default.splice(0,1);
                    }
                }
                /**
                 *三级级联事件一
                 *在这里发请求获取第二级内容
                 *@param newVal 第一级选择的值
                 */
                $scope.onchangeone = function(newVal){
                    //加载第二级数据
                    opt.data.pid = newVal;//重新指定父ID
                    request(opt.url,opt.data,function(data){
                        $scope.list.qa2 = data[opt.resultKey];
                        //一级改变时回调
                        opt.changeone && opt.changeone($scope.list.qa2);
                        //设置第二级默认值
                        setDefaultValue(function(v){
                            $scope.param.qa2 = v;
                        });
                    });
                }   
                /**
                 *三级级联事件二
                 *在这里发请求获取第三级内容
                 *@param newVal 第二级选择的值
                 */
                $scope.onchangetwo = function(newVal){
                    opt.data.pid = newVal;//重新指定父ID
                    request(opt.url,opt.data,function(data){
                        $scope.list.qa3 = data[opt.resultKey];
                        //二级改变时回调
                        opt.changetwo && opt.changetwo($scope.list.qa3);
                        //设置第三级默认值
                        setDefaultValue(function(v){
                            $scope.param.qa3 = v;
                        });
                    });
                }
        }
        /**
         * 请求数据
         */
        function request(url, param, callback){
            uri.send({
                url: url,
                data: param
            }).then(function(res){
                if(res.status == 200){
                    callback && callback.call(this,res.data);
                }else{
                    console.log(res.err);
                }
            });
        }
      
    }]);
})(window.angular);

(function(angular) {
    'use strict';
    angular.module('iss.courier').
    controller('CourierController', ['$scope', '$rootScope', 'UriService', 'PagingService',
    function($scope, $rootScope, uri, PagingService) {
        $scope.courierData = {};
        /**
         * 获取闪送员基础信息
         */
        uri.send({
            url: uri.action_courier_info,
            data:{
                carrierId: $scope.data.courierEntity.courierId
            }
        }).then(function(res){
            if(res.status == 200){
                $scope.courierData = res.data;
            }else{
                console.log(res);
            }
        });
    }]);
})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.courier').
    controller('PresentRecordController', ['$scope', '$rootScope', 'UriService', 'PagingService',
    function($scope, $rootScope, uri, PagingService) {
        $scope.presentRecords = [];
        var courierEntity = $scope.data.courierEntity || {};//闪送员对象
        /**
         * 获取闪送员提现记录
         */
        uri.send({
            url: uri.action_courier_present_record,
            data:{
                carrierId: courierEntity.courierId || ''
            }
        }).then(function(res){
            if(res.status == 200){
                $scope.presentRecords = res.data.result;
            }else{
                console.log(res);
            }
        });

    }]);
})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.courier').
    controller('ProfitLossDetailsController', ['$scope', '$rootScope', 'UriService', 'PagingService',
    function($scope, $rootScope, uri, PagingService) {
        $scope.profitLossDetails = [];
        var courierEntity = $scope.data.courierEntity || {};//闪送员对象
        /**
         * 获取闪送员收支明细
         */
        uri.send({
            url: uri.action_courier_lossdetail,
            data:{
                carrierId: courierEntity.courierId || ''
            }
        }).then(function(res){
            if(res.status == 200){
                $scope.profitLossDetails = res.data.result;
            }else{
                console.log(res);
            }
        });  
        

    }]);
})(window.angular);


 /**
  * 区间日期选择 指令
  * @param dateOptions 指令所在scope 中的配制对象
  * @param dateCallback 
  *         选择日期回调接口
  *         参数： start 开始日期, end 结束日期, label 标签
  */
 (function(angular) {
    'use strict';
    angular.module('iss.datepicker').
    directive("datepickerInput", ['$http',
    function($http) {

        return {
            restrict : 'EA',
            replace: true,
            templateUrl : '/pages/datepicker/datepicker.html',
            link : function(scope, elem, attr) {
                var input = elem.find('input');
                var domi = elem.find('i');
                //添加事件
                domi.click(function() {
                  input.click();
                });
                //日期初始化
                input.daterangepicker(scope.dateOptions, function(start, end, label) { 
                    //日期回调接口
                    scope.dateCallback && scope.dateCallback.call(this, start, end, label);
                    // console.log('New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')'); 
                });

            }
        }
    }]);
})(window.angular);


(function(angular) {
  	'use strict';
    //bindingUser
    angular.module('iss.fragment')
    .controller('BindingUserController',['$scope', '$rootScope', 'UriService', '$uibModal', 'AlertService',
    function($scope, $rootScope, UriService, $uibModal, alertService) {
        var showBindingUser = function(currentPage, searchStr) {
            UriService.send({
                url : UriService.action_showBindingUser,
                data : {
                    "pageNo" : currentPage,
                    "searchStr" : searchStr || ''
                }
            }).then(function(res) {
                if(200 != res.status) {
                    alertService.warning('获取数据失败！');
                    return;
                }
                $scope.data = res.data;
            });
        };
        var deleteBindingUser = function(id) {
            UriService.send({
                url : UriService.action_delBindingUser,
                data : {
                    "id":id
                }
            }).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
                showBindingUser($scope.data.currentPage, $scope.searchStr);
            });
        };

        //refresh data
        showBindingUser(1, '');
        $scope.paging = function() {
            showBindingUser($scope.data.currentPage, $scope.searchStr);
        };
        $scope.search = function() {
            showBindingUser(1, $scope.searchStr);
        };

        //Reset SearchStr
        $scope.reset = function() {
            $scope.searchStr = '';
        };
        //Delete BindingUser
        $scope.del = function(id) {
            deleteBindingUser(id);
        }
        //Add/Edit BindingUser
        $scope.edit = function(id) {
            $uibModal.open({
                windowTopClass: 'imodel-top-css',
                templateUrl: UriService.page_edit_binding_user,
                controller: 'EditBindingUserController',
                resolve: {
                    modalData: function () {
                      return id;
                    }
                }
            });
        };

    }]);

    //editBindingUser
    angular.module('iss.fragment')
    .controller('EditBindingUserController', ['$scope', '$rootScope', 'UriService', 'modalData', '$modalInstance', 'AlertService',
    function($scope, $rootScope, UriService, modalData, $modalInstance, alertService){
        if(-1 != modalData) {
            $scope.id = modalData;
            UriService.send({
                url : UriService.action_showBindingUserById,
                data : {
                    "id" : modalData
                }
            }).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
                $scope.bindingUser = res.data.bindingUser;
            });
        }
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };
        $scope.submit = function() {
            console.log($scope.bindingUser);
            UriService.send({
                url : UriService.action_saveBindingUser,
                data : $scope.bindingUser
            }).then(function(res){
                if(200 == res.states) {
                    alertService.success('保存成功！');
                }else {
                    alertService.warning(res.err);
                }
            });
        };
    }]);
})(window.angular);
(function(angular){
	//时段业务量监控
    angular.module('iss.fragment')
    .controller('TimespanMonitorController',['$scope', '$rootScope', 'UriService', 'SearchBarDatePickerService', 'AlertService',
    function($scope, $rootScope, UriService, datepicker, alertService) {
    	var getData = function(page, st, et, type) {
	    	UriService.send({
	    		url:UriService.action_timespanMonitor,
	    		data: {
	    			"page":page,
	    			"st":st,
	    			"et":et,
	    			"type":type
	    		}
	    	}).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
	    		$scope.data = res.data;
	    	});
    	};
    	//init
    	$scope.getData = function(page){
    		getData(page, $scope.st, $scope.et, $scope.data.type);
    	};
    	$scope.data.type = "1";//初始化默认类型为1
    	$scope.userType = [
    		{"id":"1", "name":"电话组"}, 
    		{"id":"2", "name":"投诉组"}
    	];
    	getData(null, null, null, 1);
    	initDatapicker($scope, datepicker);
    }]);
    //工单明细监控
    angular.module('iss.fragment')
    .controller('TicketDetailMonitorController',['$scope', '$rootScope', 'UriService', 'SearchBarDatePickerService', 'AlertService',
    function($scope, $rootScope, UriService, datepicker, alertService) {
    	var getData = function(page, st, et) {
	    	UriService.send({
	    		url:UriService.action_ticketDetailMonitor,
	    		data: {
	    			"page":page,
	    			"st":st,
	    			"et":et,
	    		}
	    	}).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
	    		$scope.data = res.data;
	    	});
    	};
    	//init
    	$scope.getData = function(page){
    		getData(page, $scope.st, $scope.et);
    	};
    	getData(null, null, null);
    	initDatapicker($scope, datepicker);
    }]);
    //待抢单数据监控(工单量)
    angular.module('iss.fragment')
    .controller('WaitingGrabTicketMonitorController',['$scope', '$rootScope', 'UriService', 'SearchBarDatePickerService', 'AlertService',
    function($scope, $rootScope, UriService, datepicker, alertService) {
    	var getData = function(page, st, et, type) {
	    	UriService.send({
	    		url:UriService.action_waitingGrabMonitor,
	    		data: {
	    			"page":page,
	    			"st":st,
	    			"et":et,
	    			"type":type
	    		}
	    	}).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
	    		$scope.data = res.data;
	    	});
    	};
    	//init
    	$scope.getData = function(page){
    		getData(page, $scope.st, $scope.et, $scope.data.type);
    	};
    	$scope.data.type = 0;//初始化默认类型为0
    	$scope.userType = [
    		{"id":0, "name":"每小时待抢单数据监控"}, 
    		{"id":1, "name":"每日待抢单数据"}
    	];
    	getData(null, null, null, 0);
    	initDatapicker($scope, datepicker);
    }]);
    //待抢单数据监控(工作量)
    angular.module('iss.fragment')
    .controller('WaitingGrabWorkingMonitorController',['$scope', '$rootScope', 'UriService', 'SearchBarDatePickerService', 'AlertService',
    function($scope, $rootScope, UriService, datepicker, alertService) {
    	var getData = function(page, st, et, type) {
	    	UriService.send({
	    		url:UriService.action_waitingGrabMonitor,
	    		data: {
	    			"page":page,
	    			"st":st,
	    			"et":et,
	    			"type":type
	    		}
	    	}).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
                var data = res.data;
                var nameList = data.data.data.name;
                for(var index in data.data.data.data) {
                    var obj = data.data.data.data[index];
                    obj.operatorId = nameList[obj.operatorId];
                }
	    		$scope.data = data;
	    	});
    	};
    	//init
    	$scope.getData = function(page){
    		getData(page, $scope.st, $scope.et, $scope.data.type);
    	};
    	$scope.data.type = 3;//初始化默认类型为2
    	$scope.userType = [
    		{"id":2, "name":"每小时员工工作量"}, 
    		{"id":3, "name":"每日员工工作量"}
    	];
    	getData(null, null, null, 2);
    	initDatapicker($scope, datepicker);
    }]);

    //去空格filter
    angular.module('iss.fragment')
    .filter('block', function(){
    	return function(date){
    		return date.split(' ')[0];
    	};
    });

    var initDatapicker = function($scope, datepicker) {
        $scope.st = '';
        $scope.et = '';
        $scope.dateOptions = datepicker.options;
        $scope.dateCallback = function(start, end, label){
            var patten = 'YYYY-MM-DD';
            $scope.st = start.format(patten);
            $scope.et = end.format(patten);
        }
    };
})(window.angular);
(function(angular){
	'use strict';
    angular.module('iss.fragment')
    .controller('TicketStatisticController',['$scope', '$rootScope', 'UriService', '$uibModal', 'AlertService', 'SearchBarDatePickerService',
    function($scope, $rootScope, UriService, $uibModal, alertService, datepicker) {
	    var $newTR = '<tr><td>@id1</td><td>@id2</td><td class="qa_qroup_id3" id="@index">@id3</td></tr>';
	    var $total = '<tr><td colspan="3" id="total">总计</td></tr>'
	    var $newTD = '<td class="number @index">@number</td>';
	    var $newTime = '<td rowspan="2" class="time">@time</td>'
    	var getModel = function() {
	    	UriService.send({
	    		url:UriService.action_ticketStatisticModel
	    	}).then(function(res){
                if(200 != res.status) {
                    alertService.warning("加载模板错误！");
                    return;
                }
                drawTable(res.data.dictionary, res.data.isExist, res.data.model);
                mc('tb', 0, 0, 0);
	    	});
    	};
    	var drawTable = function(dictionary, exist, model) {
    		for(var index in model) {
    			var m = model[index];
    			$('#tbd').append($newTR.replace(/@id1/g, dictionary[m.id1])
    				.replace(/@id2/g, dictionary[m.id2]||'')
    				.replace(/@id3/g, dictionary[m.id3]||'')
    				.replace(/@index/g, (m.id1||'')+'_'+(m.id2||'')+'_'+(m.id3||'')));
    		}
    	};
    	var generateTime = function(timeList) {
            for(var i in timeList) {
	            $('#timeHead').after($newTime.replace(/@time/g, timeList[i]));
            }
    	}
    	var generateRanking = function(key, list) {
    		var counter = 1;
            for(var i in list) {
	            $('#'+key).after($newTD.replace(/@number/g, list[i])
	            	.replace(/@index/g, 'index'+counter++));
            }
    	};
    	var generateTotal = function() {
    		var counter = 1;
			$('#tbd').append($total);
			while($('.number'+counter).exist()) {
				var sum = 0.0
	            $('#total').after($newTD.replace(/@number/g, list[i]));
	            counter++
			}
    	};
    	var getData = function(type) {
	    	UriService.send({
	    		url:UriService.action_ticketStatisticData,
	    		data:{
	    			"type":type,
	    			"st":$scope.st,
	    			"et":$scope.et
	    		}
	    	}).then(function(res){
                if(200 != res.status) {
                    alertService.warning("获取数据错误！");
                    return;
                }
                $('.time').remove();
                $('.number').remove();
                generateTime(res.data.timeList);
                for(var key in res.data.data) {
                	generateRanking(key, res.data.data[key]);
                }
			});
    	};

    	$scope.getData = function() {
			getData($scope.selectedType);
    	};

    	getModel()
		$scope.selectedType = 0;
    	$scope.statisticType = [
    		{"id":0, "name":"工单排名"}, 
    		{"id":1, "name":"工单占比"},
    		{"id":2, "name":"订单占比"}
    	];
    	initDatapicker($scope, datepicker);
	}]);

    var initDatapicker = function($scope, datepicker) {
	    $scope.st = '';
	    $scope.et = '';
	    $scope.dateOptions = datepicker.options;
	    $scope.dateCallback = function(start, end, label){
	        var patten = 'YYYY-MM-DD';
	        $scope.st = start.format(patten);
	        $scope.et = end.format(patten);
	    }
    };
	function mc(tableId, startRow, endRow, col) {
	    var tb = document.getElementById(tableId);
	    if (col >= tb.rows[0].cells.length) {
	        return;
	    }
	    if (col == 0) { endRow = tb.rows.length-1; }
	    for (var i = startRow; i < endRow; i++) {
	        if (tb.rows[startRow].cells[col].innerHTML == tb.rows[i + 1].cells[0].innerHTML) {
	            tb.rows[i + 1].removeChild(tb.rows[i + 1].cells[0]);
	            tb.rows[startRow].cells[col].rowSpan = (tb.rows[startRow].cells[col].rowSpan | 0) + 1;
	            if (i == endRow - 1 && startRow != endRow) {
	                mc(tableId, startRow, endRow, col + 1);
	            }
	        } else {
	            mc(tableId, startRow, i + 0, col + 1);
	            startRow = i + 1;
	        }
	    }
	}
})(window.angular);
(function(angular){
    //TicketType
    angular.module('iss.fragment')
    .controller('TicketTypeController',['$scope', '$rootScope', 'UriService', '$uibModal', 'AlertService',
    function($scope, $rootScope, UriService, $uibModal, alertService) {
    	//type是树的层数 对应 1 2 3
    	//qaType是工单类型  对应 0 闪送员 1客户
    	//但是res.data.type是工单类型
    	var getData = function(type, pid) {
	    	UriService.send({
	    		url : UriService.action_showTicketType,
	    		data : {
	    			"qaType" : type,
	    			"pid" : pid
	    		}
	    	}).then(function(res) {
				if(200 != res.status) {
				    alertService.warning(res.err);
				    return;
				}
	    		//设置闪送员 | 客户
	    		$scope.type = res.data.type;
	    		if(-1 == res.data.type) {
	    			$scope.typeName = '';
	    		}

	    		if(-1 == res.data.type) {
	    			res.data.list = [
	    				{
	    					"name" : "闪送员",
	    					"id" : 0,
	    					"type" : 0
	    				},
	    				{
	    					"name" : "用户",
	    					"id" : 0,
	    					"type" : 1
	    				}
	    			]
	    		}
	    		$scope.list = res.data.list;
	    		$scope.path = res.data.root;
	    		$scope.insertPid = res.data.insertPid;
	    		$scope.insertQaType = res.data.insertQaType;
	    		$scope.insertType = res.data.insertType;
	    	});
    	};
		var backToRoot = function() {
			getData(-1, 0);
		}

		//init
		backToRoot();
		$scope.backToRoot = function() {
			backToRoot();
		};
		$scope.getData = function(type, pid) {
			if(-1 != $scope.type) {
				type = $scope.type;
			}else {
				$scope.type = type;
				$scope.typeName = (type==0?'闪送员':'用户');
			}
			getData(type, pid);
		};
        //Add TicketType
        $scope.add = function(){
            $uibModal.open({
                windowTopClass: 'imodel-top-css',
                templateUrl: UriService.page_edit_ticket_type,
                controller: 'EditTicketTypeController',
                resolve: {
                    modalData: function () {
                      return {
						"pid":$scope.insertPid,
						"qaType":$scope.insertQaType,
						"type":$scope.insertType,
						"path":$scope.path
                      };
                    }
                }
            }).result.then(function() {
                getData($scope.type, $scope.insertPid);
            }, function() {
                getData($scope.type, $scope.insertPid);
            });
        };

        //Delete TicketType
        $scope.del = function(id) {
            UriService.send({
            	url : UriService.action_delTicketType,
            	data : {
            		"id":id
            	}
            }).then(function(res){
	        	if(200 == res.status) {
	        		getData($scope.type, $scope.insertPid);
	        	}else {
	        		alert(res.err);
	        		getData($scope.type, $scope.insertPid);
	        	}
            });
        };
    }]);

    //editTicketType
    angular.module('iss.workorder')
    .controller('EditTicketTypeController', ['$scope', '$rootScope', 'UriService', 'modalData', '$modalInstance', 'AlertService',
    function($scope, $rootScope, UriService, modalData, $modalInstance, alertService){
    	if(0 == modalData.qaType) {
    		$scope.typeName = '闪送员';
    	}else {
    		$scope.typeName = '客户';
    	}
    	$scope.path = modalData.path;
        $scope.submit = function() {
	        UriService.send({
	        	url : UriService.action_saveTicketType,
	        	data : {
	        		"pid":modalData.pid,
	        		"qaType":modalData.qaType,
	        		"type":modalData.type,
	        		"name":$scope.name,
	        		"deleteState":0
	        	}
	        }).then(function(res){
	        	if(200 == res.status) {
	        		alertService.success('保存成功！');
	        		$modalInstance.dismiss('cancel');
	        	}else {
	        		alertService.warning(res.err);
	        	}
	        });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };
    }]);
})(window.angular);
(function(angular) {
    'use strict';
    angular.module('iss.fragment').
    controller("UserProfileController", ['$scope', '$rootScope', 'UriService', 'AlertService',
    function ($scope, $rootScope, UriService, alertService) {
        var mobile = $scope.data.mobile;
        UriService.send({
            url : UriService.action_userProfile,
            data : {
                "mobile":mobile
            }
        }).then(function(res){
            if(200 != res.status) {
                alertService.warning(res.err);
                return;
            }
            $scope.data = res.data;
        });
    }]);
})(window.angular);
(function(angular) {
    'use strict';
    angular.module('iss.home').
    controller('HomeController', ['$scope', '$rootScope', 'UriService', 'PagingService','isDevelop',
    function($scope, $rootScope, uri, PagingService, isDevelop) {
        // [注] 个人操作初始化权限，可以从$rootScope.SessionUserEntity 中获取对应的权限信息,进行有选择的初始化工作

        /**
         * 初始化个人中心工作空间
         */
        if(check('151200')){
            $rootScope.addWorkspace({
                name:'个人中心',
                active:true,
                isRemove: false,
                content: uri.icenter
            });
        }
        /**
         * 初始化一个工单中心工作空间
         */
        if(check('150309')){
            $rootScope.addWorkspace({
                name:'工单中心',
                active:true,
                isRemove: false,
                content: uri.page_ticket_list
            });
        }
        /**
         * 初始化一个订单中心工作空间
         */
        if(check('150400')){
            $rootScope.addWorkspace({
                name:'订单中心',
                active:true,
                isRemove: false,
                content: uri.page_order_list
            });
        }
        /**
         * 校验权限
         * @param code 权限编码 
         * [注] 开发环境无权限控制
         */
        function check(code){
            var premissionCodes = $rootScope.SessionUserEntity.codes || [];
            return isDevelop || premissionCodes.indexOf(code)!=-1;
        }
    }]);
})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.icenter').
    controller('ICenterController', ['$scope', '$rootScope', 'UriService', 'PagingService',
    function($scope, $rootScope, uri, PagingService) {
        //初始化个人中心工作空间
        $rootScope.addWorkspace({
            name:'个人中心',
            active:true,
            isRemove: false,
            content: uri.icenter
        });
        
    }]);
})(window.angular);


angular.module('iss.login').
controller('loginController', ['$scope', '$state','UriService','LoginService', 'AlertService',
function($scope, $state, uri, loginService, alertService) {
    //登录信息
    $scope.user = {
      username:'',
      password: ''
    }
    //设置登录页面的高度
    $scope.LoginBodyStyle = {
        height: screen.height
    };
    //登录事件
    $scope.play = function(){
      // 启动全屏!
      alertService.launchFullscreen();
      alertService.warning('登录中..', false);
      //登录请求
      uri.send({
        url: uri.action_login,
        data: $scope.user
      }).then(function(res){
            if(res.status == 200){
                alertService.clear();
                //处理登录相关操作,如：权限处理
                loginService.setUserSessionInfo(res.data);
                //登录成功后跳转到首页
                $state.go('index.orderlist');
            }else{
                alertService.danger(res.err);
            }
      });
    }
    //退出登录
    $scope.loginOut = function(){
        alertService.warning('正在退出登录...',false)
        uri.send({
            url: uri.action_login_out
        }).then(function(res){
                if(res.status == 200){
                    alertService.clear();
                    $state.go('login');
                }else{
                    alertService.danger(res.err);
                }
        });
    }

}]);
(function(angular) {
    'use strict';
    angular.module('iss.login')
    .service('LoginService', ['$rootScope','$window','PermissionService', function ($rootScope, $window, permissionService) {

        /**
         * 设置用户登录信息
         */
        this.setUserSessionInfo = function(entity){
            //缓存权限
            var cacheUserInfo = {
                user: entity.adminUser.admin,
                codes: entity.codes
            };
            $window.sessionStorage._sessionUserEntity = JSON.stringify(cacheUserInfo);
            //将用户信息放到RootScope下
            $rootScope.SessionUserEntity = cacheUserInfo;
            //设置权限
            permissionService.setUserPermissions(entity.codes);
        };
        /**
         * 获取用户登录信息
         */
        this.getUserEntity = function(){
            var user = $window.sessionStorage._sessionUserEntity || null;
            if(user){
                user = JSON.parse(user);
            }
            return user;
        }
    }]);
})(window.angular);

(function(angular){
    angular.module('iss.map')
    .controller('MapController',['$scope', '$rootScope', 'UriService',
    function($scope, $rootScope, UriService) {
       
    }]);
})(window.angular);
(function(angular) {
    'use strict';
    angular.module('iss.map').
    service('MapService', ['UriService', function( uriService) {
        var _this = this;
        /**
         * 地图初始化
         */
        this.initMap = function(id){
            var mapid = id || 'map_container';
            _this.map = new BMap.Map(mapid);
            _this.map.addControl(new BMap.NavigationControl());               // 添加平移缩放控件
            _this.map.addControl(new BMap.ScaleControl({anchor: BMAP_ANCHOR_TOP_LEFT}));   // 添加比例尺控件
            _this.map.addControl(new BMap.OverviewMapControl());                            //添加缩略地图控件
            _this.map.enableScrollWheelZoom();                              //启用滚轮放大缩小
            _this.map.addControl(new BMap.MapTypeControl());                //添加地图类型控件

            return _this.map;
        }
        /**
         * 根据IP获取当前位置信息
         */
         this.getLocalCity = function(callback){

            new BMap.LocalCity().get(function(result){
                callback && callback(result);
            });
         }
         /**
          * 延迟加载地图
          * 确保地图能正常加载
          */
         this.lazyLoading = function (callback){
            setTimeout(function(){
                callback && callback(_this.map);
            },200);  
        }
        
    }]);
})(window.angular);


(function(angular){
    angular.module('iss.navbar')
    .controller('NavbarController',['$scope', '$rootScope', 'UriService',
    function($scope, $rootScope, UriService) {
    	// 我的工单
    	$scope.myTicket = function() {
	        $rootScope.addWorkspace({
	            name:'我的工单',
	            active:true,
	            isRemove: true,
	            content:UriService.page_my_ticket,
	            data:{
	            }
	        });
    	};
    	// 数据统计
    	$scope.ticketAmountMonitor = function() {
	        $rootScope.addWorkspace({
	            name:'工单数据量',
	            active:true,
	            isRemove: true,
	            content:UriService.page_ticket_amount_monitor,
	            data:{
	            }
	        });
    	};
    	$scope.timespanMonitor = function() {
	        $rootScope.addWorkspace({
	            name:'时段业务量',
	            active:true,
	            isRemove: true,
	            content:UriService.page_timespan_monitor,
	            data:{
	            }
	        });
    	};
    	$scope.ticketDetailMonitor = function() {
	        $rootScope.addWorkspace({
	            name:'工单明细',
	            active:true,
	            isRemove: true,
	            content:UriService.page_ticket_detail_monitor,
	            data:{
	            }
	        });
    	};
    	$scope.WaitingGrabTicketMonitor = function() {
	        $rootScope.addWorkspace({
	            name:'待抢单工单量',
	            active:true,
	            isRemove: true,
	            content:UriService.page_waiting_grab_ticket_monitor,
	            data:{
	            }
	        });
    	};
    	$scope.WaitingGrabWorkingMonitor = function() {
	        $rootScope.addWorkspace({
	            name:'待抢单工作量',
	            active:true,
	            isRemove: true,
	            content:UriService.page_waiting_grab_working_monitor,
	            data:{
	            }
	        });
    	};
    	//绑定信息
    	$scope.bindingUser = function() {
	        $rootScope.addWorkspace({
	            name:'绑定信息',
	            active:true,
	            isRemove: true,
	            content:UriService.page_binding_user_list,
	            data:{
	            }
	        });
    	};
    	//工单类型
    	$scope.ticketType = function() {
	        $rootScope.addWorkspace({
	            name:'工单类型',
	            active:true,
	            isRemove: true,
	            content:UriService.page_ticket_type_list,
	            data:{
	            }
	        });
    	};
    	//工单统计
    	$scope.ticketStatistic = function() {
	        $rootScope.addWorkspace({
	            name:"工单统计",
	            active:true,
	            isRemove: true,
	            content:UriService.page_ticket_statistic,
	        });
    	};

    }]);
})(window.angular);
(function(angular){
    'use strict';
    angular.module('iss.order')
    .controller("CancelController", ['$scope', '$rootScope', 'UriService', '$uibModal', 'AlertService',
        function ($scope, $rootScope, UriService, $uibModal, alertService) {
        	var getData = function() {
                // alertService.warning("数据刷新中...");
        		UriService.send({
    				url:UriService.action_showComplain
    		   	}).then(function(res){
                    if(200 == res.status) {
                        // alertService.success("加载完成");
                        $scope.list = res.data;
                    }else {
                        alertService.warning(res.err);
                    }
    		   	});
        	};
        	//Fetch Complain Order
        	getData();
    	   	$scope.refresh = function() {
    			getData();
    	   	};
    	   	$scope.fetch = function() {
                alertService.warning("正在为您获取数据...");
        		UriService.send({
    				url:UriService.action_pickupComplain
    		   	}).then(function(res){
    		   		if(200 == res.status) {
    		   			getData();
    		   		}else {
    		   			alertService.warning(res.err);
    		   		}
    		   	});
    	   	};

            //订单备注
            $scope.orderRemark = function(orderNumber) {
                $uibModal.open({
                    windowTopClass: 'imodel-top-css',
                    templateUrl: UriService.page_orderRemark,
                    controller: 'OrderRemarkController',
                    resolve: {
                        modalData: function() {
                          return {
                            "orderNumber":orderNumber
                          };
                        }
                    }
                }).result.then(function() {
                    getData();
                }, function() {
                    //取消
                });
            };

            //查看订单详情
            $scope.orderDetail = function(orderNumber) {
                UriService.send({
                    url:UriService.action_orderlist,
                    data:{
                      "st":"2015-01-01",
                      "et":moment().format('YYYY-MM-DD'),
                      "key": "1001",
                      "searchValue": orderNumber
                    }
                }).then(function(res){
                    if(200 != res.status) {
                        alertService.warning(res.err);
                        return;
                    }
                    var tempOrderEntity = res.data.result[0];
                    $rootScope.addWorkspace({
                      name:'订单['+tempOrderEntity.orderInfo.orderNumber+']',
                      active:true,
                      isRemove: true,
                      content: UriService.order_detail,
                      data:{
                          orderEntity: tempOrderEntity
                      }
                    });
                });
            };

            /**
            * 处罚闪送员
            */
            $scope.punishment = function(orderNumber){
              $uibModal.open({
                windowTopClass: 'imodel-top-css',
                templateUrl: UriService.page_order_punishment,
                controller: 'ModalPunishmentController',
                
                resolve: {
                  modalData: function () {
                    return {
                    	orderInfo:{
                    		orderNumber:orderNumber
                    	}
                    };
                  }
                }

              });
            };

        }]);

})(window.angular);
(function(angular) {
  'use strict';
  angular.module('iss.order').
  controller('OrderListController', ['$state', '$scope', '$rootScope', '$stateParams', 'UriService', 'PagingService','AlertService',
  function($state, $scope, $rootScope, $stateParams, uri, PagingService, alertService) {
        var tempParam = $scope.data && $scope.data.param || {};
        $scope.data = {};
        $scope.data.marks = [];
        $scope.orderType = 0;//订单类型 all

        //分页初始化
        PagingService.resetPaging($scope);

         //设置分页事件
         PagingService.setPaging($scope,{
            changed: function(){
                tempParam.pageNo = $scope.data.paging.currentPage;
                tempParam.type = $scope.orderType;
                loadPagingData(tempParam);
            }
        });
       
        //初始加载第一页数据
        loadPagingData(tempParam);

        //加载分页数据
        function loadPagingData(param){
            uri.send({
                url: uri.action_orderlist,
                data: param
              }).then(function(res){
                    if(res.status == 200){
                        // alertService.success('订单列表数据加载成功');
                        var dataEntity = res.data;
                        var list = dataEntity.result;
                        $scope.data.marks = dataEntity.marks;
                        $scope.data.items = list;
                        //设置分页信息
                        PagingService.setPaging($scope,{
                            totalItems: dataEntity.total 
                        });
                    }else{
                        alertService.success(res.err);
                    }
              });
        }
        
        //查看订单详情
        $scope.data.lookOrderDetail = function(entity){
            // console.log(entity);
            $rootScope.addWorkspace({
                name:'订单['+entity.orderInfo.orderNumber.substr(-6)+']',
                active:true,
                isRemove: true,
                content: uri.order_detail,
                data:{
                    orderEntity: entity
                }
            });
        }
        //查看闪送员档案 
        //@param entity 闪送员信息
        $scope.data.lookCourierInfo = function(entity){
            $rootScope.addWorkspace({
                name:'闪送员['+entity.name+']',
                active:true,
                isRemove: true,
                content: uri.page_courier_info,
                data:{
                    courierEntity: entity
                }
            });
        };
        /**
         * 根据标签查询订单数据
         */
         $scope.isActive = [true];//缺省时第一个标签选中
        $scope.data.queryOrderByMark = function(item, index){
            if(item.id !=1 && item.id != 3){
                $scope.isActive = [];
                $scope.isActive[index] = true; //设置标签按钮互斥
            }

            $scope.orderType = item.id;//订单类型,待抢？取件？。。。
            if(1 == item.id || 9 == item.id) {
                if(1 == item.id) {
                    var name = '待抢单'
                }else {
                    var name = '新城市待抢单'
                }
                $rootScope.addWorkspace({
                    name:name,
                    active:true,
                    isRemove: true,
                    content: uri.page_waitingGrab,
                    data:{
                        type:item.id
                    }
                });
            }else if(3 == item.id) {
                $rootScope.addWorkspace({
                    name:'投诉单待处理单',
                    active:true,
                    isRemove: true,
                    content: uri.page_cancel,
                    data:{
                    }
                });
            }else {
                loadPagingData({
                    type: item.id,
                    pageNo: $scope.data.paging.currentPage
                });      
            }
        }

    }]);

})(window.angular);


(function(angular){
  'use strict';
    angular.module('iss.order')
    .controller("OrderRemarkController", ['$scope', '$rootScope', 'UriService', 'modalData', '$modalInstance','AlertService',
        function ($scope, $rootScope, UriService, modalData, $modalInstance, alertService) {
            $scope.orderNumber = modalData.orderNumber;
            $scope.submit = function() {
                UriService.send({
                    url : UriService.action_orderRemark,
                    data : {
                        "orderNumber": $scope.orderNumber,
                        "remark": $scope.remark,
                    }
                }).then(function(res) {
                    if(200 == res.status) {
                        alertService.success("订单操作成功！");
                        $modalInstance.close('ok');
                    }else {
                        alertService.danger("操作失败！");
                    }
                });
            };
            //取消
            $scope.cancel = function (){
                $modalInstance.dismiss('cancel');
            };
        }]);
})(window.angular);
(function(angular){
  'use strict';
  angular.module('iss.order')
  .controller("WaitingGrabController", ['$scope', '$rootScope', 'UriService', 'AlertService',
    function ($scope, $rootScope, UriService, alertService) {
      $scope.orderType = $scope.data.type;
    	var getData = function() {
            // alertService.warning("数据刷新中...");
    		UriService.send({
                  url:UriService.action_showPending,
                  data: {
                    "type":$scope.orderType
                  }
		   	}).then(function(res){
                  if(200 == res.status) {
                    // alertService.success("加载完成");
                    $scope.list = res.data;
                  }else {
                    alertService.warning(res.err);
                  }
        });
    	};
    	//Fetch WaitingGrab Order
    	getData();
	   	$scope.refresh = function() {
		    getData();
	   	};
	   	$scope.fetch = function() {
            alertService.warning("正在为您获取数据...");
    		UriService.send({
				  url: UriService.action_pickupPending,
                  data: {
                    "type":$scope.orderType
                  }
		   	}).then(function(res){
		   		if(200 == res.status) {
                    getData();
		   		}else {
		   			alertService.warning(res.err);
		   		}
		   	});
	   	};
      /**
       * 打开地图页面
       */
      $scope.openMapPage = function(orderNumber) {
        $rootScope.addWorkspace({
            name:'订单地图[' + orderNumber.substr(-6) + ']',
            active:true,
            isRemove: true,
            content: UriService.page_order_map,
            data:{
              "orderNumber": orderNumber,
              "time":Date.parse(new Date())
            }
        });
      };
      //查看订单详情
      $scope.orderDetail = function(orderNumber) {
        UriService.send({
          url:UriService.action_orderlist,
          data:{
              "st":"2015-01-01",
              "et":moment().format('YYYY-MM-DD'),
              "key": "1001",
              "searchValue": orderNumber
          }
        }).then(function(res){
          if(200 != res.status) {
              alertService.warning(res.err);
              return;
          }
          var tempOrderEntity = res.data.result[0];
          $rootScope.addWorkspace({
              name:'订单['+tempOrderEntity.orderInfo.orderNumber+']',
              active:true,
              isRemove: true,
              content: UriService.order_detail,
              data:{
                  orderEntity: tempOrderEntity
              }
          });
        });
      };
    }]);
})(window.angular);
(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalAppointmentsController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri,alertService) {
        $scope.modalData  = modalData;
        $scope.remark = ''; //预约说明
        $scope.isDisabled = false; //请求按钮控制

        //预约日期
        $scope.date = {
            opened: false,
            options: {
                formatYear: 'yy',
                startingDay: 1
            },
            format: 'yyyy-MM-dd',
            value: moment().format("YYYY-MM-DD"),
            min: moment(),
            max: moment().add(1, 'days')
        }
        //预约时间
        $scope.time = {
            value: moment(),
            hstep: 1,
            mstep: 5,
            ismeridian: true
        }
        //时间设置
        $scope.changedtime = function(){};
        //日历开关
        $scope.opendate = function($event) {
            $scope.date.opened = true;
        };

        //确定
        $scope.ok = function (){
            $scope.isDisabled = true;
            uri.send({
                url: uri.action_order_appointment,
                data: {
                    infoId: modalData.type.id,
                    appDate: moment($scope.date.value).format("YYYY-MM-DD"),
                    appTime: moment($scope.time.value).format('HH:mm'),
                    appointmentReason: $scope.remark,
                    orderNumber: modalData.orderNumber,
                    appointType: modalData.type.id ? 2 : 1 //1, "取件预约"; 2, "收件预约"
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.add('预约成功~!');
                    $modalInstance.close();
                }else{
                    $scope.isDisabled = false;
                    alertService.add(res.err,'danger');
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalAssigningController', ['$scope', '$modalInstance','$http','modalData','UriService','AlertService',
    function( $scope, $modalInstance, $http, modalData, uri, alertService) {
        console.log(modalData);
        $scope.modalData  = modalData;
        $scope.mobile = ''; //指派的闪送员手机号
        $scope.remark = ''; //备注
        //确定
        $scope.ok = function (){
            uri.send({
                url: uri.action_order_assigning,
                data: {
                    takedMobile: $scope.mobile,
                    remark: $scope.remark,
                    orderNumber: modalData.orderInfo.orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.add('指派成功~!');
                    $modalInstance.close();
                }else{
                    $scope.isDisabled = false;
                    alertService.add(res.err,'danger');
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('OrderDetailController', ['$log','$uibModal','$scope', '$rootScope', 'UriService', 'PagingService','AlertService','isDevelop',
    function($log, $uibModal, $scope, $rootScope, uri, PagingService, alertService, isDevelop) {
        $scope.isDevelop = isDevelop;
        var orderEntity = $scope.data.orderEntity;//单击[查看]传入workspace中的对象
        $scope.orderInfo = {};
        $scope.remarkWorkOrderList = [];//投诉备注信息列表

        /**
         * 获取订单详情基础信息
         */
        function getOrderBaseInfo(){
            uri.send({
                url: uri.action_orderdetial_custommer,
                restdata:{
                    orderNumber: orderEntity.orderInfo.orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    $scope.orderInfo = res.data;
                    // alertService.add("订单基础数据加载完成");
                }else{
                    alert(res.err);
                }
            });
        }
        getOrderBaseInfo();
        /**
         * 订单投诉信息列表
         */
        function getOrderComplaints(){
            uri.send({
                url: uri.action_order_complaints,
                data:{
                    orderNumber: orderEntity.orderInfo.orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    $scope.remarkWorkOrderList = res.data;
                    // alertService.add("订单投诉信息加载完成");
                }else{
                    alert(res.err);
                }
            });
        }
        getOrderComplaints();
        /**
         * 根据订单获取工单信息
         */
        function getWorkorderList(orderNumber){
            $scope.workOrderList = [];
            uri.send({
                url: uri.action_orderdetial_workorder,
                data:{
                    orderNumber: orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    $scope.workOrderList = res.data;
                    // alertService.add("工单信息信息加载完成");
                }else{
                    alert(res.err);
                }
            });
        }
        getWorkorderList(orderEntity.orderInfo.orderNumber);
        /**
         * 编辑 工单
         */
        $scope.editWorkorder = function(item){
            $rootScope.addWorkspace({
                name: '工单详情[' + item.number + ']',
                active: true,
                isRemove: true,
                content:uri.page_ticket_detail,
                data:{
                    "id": item.id
                }
            });
        }
// -------------------------------------------------
// | 以上为模态窗口事件处理 |
// -------------------------------------------------
        /**
         * 确认积分
         */
        $scope.sureScore = function(){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_sure_score,
              controller: 'ModalOrderSureScoreController',
              resolve: {
                modalData: function () {
                  return orderEntity;
                }
              }
            }).result.then(function() {
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        };
        /**
         * 调整积分
         */
        $scope.changeScore = function(){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_change_score,
              controller: 'ModalOrderChangeScoreController',
              resolve: {
                modalData: function () {
                  return orderEntity;
                }
              }
            }).result.then(function() {
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        };
        /**
         * 闪送员并单
         */
        $scope.mergeorder = function(){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_merge_order,
              controller: 'ModalMergeOrderController',
              resolve: {
                modalData: function () {
                  return $scope.orderInfo;
                }
              }
            }).result.then(function() {
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        };
        /**
         * 处罚闪送员
         */
        $scope.punishment = function(){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_punishment,
              controller: 'ModalPunishmentController',
              resolve: {
                modalData: function () {
                  return orderEntity;
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        };
        /**
         * 客服补贴
         */
        $scope.subsidy = function(order){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_subsidy,
              controller: 'ModalSubsidyController',
              resolve: {
                modalData: function () {
                  return order;
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        }
        /**
         * 客服收件
         */
        $scope.delivery = function(item){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_delivery,
              controller: 'ModalDeliveryController',
              resolve: {
                modalData: function () {
                  return {
                    courier: $scope.data.orderEntity.courierInfo,
                    orderNumber: $scope.data.orderEntity.orderInfo.orderNumber,
                    item: item
                  };
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        }
        /**
         * 手机号变更
         * @param index 0, "修改寄件人手机"; 1,"修改收件人手机"
         */
        $scope.senderMobileModify = function(order, index){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_modifymobile,
              controller: 'ModalModifyMobileController',
              resolve: {
                modalData: function () {
                  return {
                    orderNumber: $scope.data.orderEntity.orderInfo.orderNumber,
                    order: order,
                    type: {
                        id: index,
                        name: index?'收件手机号变更':'寄件手机号变更'
                    }
                  };
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        }
        /**
         * 取件预约
         */
        $scope.takeAppointment = function(order){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_appointments,
              controller: 'ModalAppointmentsController',
              resolve: {
                modalData: function () {
                  return {
                    orderNumber: $scope.data.orderEntity.orderInfo.orderNumber,
                    order: order,
                    type: {
                        id: order.infoId || 0,
                        name: order.infoId ? '收件预约' : '取件预约'
                    }
                  };
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        }
        /**
         * 创建工单
         */
        $scope.createWorkorder = function(order){
            $uibModal.open({
                windowTopClass: 'imodel-top-css',
                templateUrl: uri.page_new_work_order,
                controller: 'NewWorkOrderController',
                resolve: {
                    modalData: function () {
                      return {
                        "orderNumber": order.orderInfo.orderNumber,
                        "tel": order.orderInfo.creator
                      };
                    }
                }
            }).result.then(function (selectedItem) {
                // 添加新工单后，数据回显
                getWorkorderList(order.orderInfo.orderNumber);
            }, function () {
                //取消
            });
        }
        /**
         * 投诉备注
         */
         $scope.remarkWorkorder = function(){
            $uibModal.open({
                windowTopClass: 'imodel-top-css',
                templateUrl: uri.page_orderRemark,
                controller: 'OrderRemarkController',
                resolve: {
                    modalData: function() {
                      return {
                        "orderNumber": orderEntity.orderInfo.orderNumber
                      };
                    }
                }
            }).result.then(function() {
                // console.log("更新备注状态");
                getOrderComplaints();
            }, function() {
                //取消
            });
         }
         /**
          * 重推订单
          */
         $scope.secondPushOrder = function(){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_second_pushorder,
              controller: 'ModalSecondPushOrderController',
              resolve: {
                modalData: function () {
                  return orderEntity;
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
         };
        /**
         * 流单
         */
        $scope.dropOrder = function(order){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_droporder,
              controller: 'ModalDropOrderController',
              resolve: {
                modalData: function () {
                  return order;
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        }
        /**
         * 取件
         */
        $scope.pickup = function(order){
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_pickup,
              controller: 'ModalPickupController',
              resolve: {
                modalData: function () {
                  return order;
                }
              }
            }).result.then(function() {
                // console.log("更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        }
        /**
         * 订单指派
         */
        $scope.assigning = function(order){
            // console.log(order);
            $uibModal.open({
              windowTopClass: 'imodel-top-css',
              templateUrl: uri.page_order_assigning,
              controller: 'ModalAssigningController',
              resolve: {
                modalData: function () {
                  return order;
                }
              }
            }).result.then(function() {
                // console.log("指派成功更新订单信息");
                getOrderBaseInfo();
            }, function() {
                //取消
            });
        }
        /**
         * 打开地图页面
         */
        $scope.openMapPage = function(orderNumber) {
            $rootScope.addWorkspace({
                name:'订单地图[' + orderNumber.substr(-6) + ']',
                active:true,
                isRemove: true,
                content: uri.page_order_map,
                data:{
                  "orderNumber": orderNumber,
                  "time":Date.parse(new Date())
                }
            });
        };
        /**
         * 打开轨迹页面
         */
        $scope.openTrailPage = function(orderNumber) {
            $rootScope.addWorkspace({
                name:'轨迹地图[' + orderNumber.substr(-6) + ']',
                active:true,
                isRemove: true,
                content: uri.page_trail_map,
                data:{
                    "orderNumber": orderNumber
                }
            });
        };
        /**
         * 用户档案
         * @param mobile从指令中传递过来的
         */
        $scope.userPorfile = function(mobile) {
            $rootScope.addWorkspace({
                name:'用户档案[' + mobile + ']',
                active:true,
                isRemove: true,
                content: uri.page_userProfile,
                data:{
                    "mobile": mobile
                }
            });
        };

    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalDeliveryController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri, alertService) {
        $scope.modalData  = modalData;
        $scope.takecode = modalData.item.deliveryPassword; //收件码
        //确定
        $scope.ok = function (){
            uri.send({
                url: uri.action_order_delivery,
                data: {
                    infoId: modalData.item.infoId,
                    deliveryPassword: modalData.item.deliveryPassword,
                    courierId: modalData.courier.courierId,
                    orderNumber: modalData.orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.add('收件成功~!');
                    $modalInstance.close();
                }else{
                    alertService.add(res.err,'danger');
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalDropOrderController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri, alertService) {

        $scope.modalData  = modalData;
        $scope.remark = ''; //流单原因
        $scope.xtype = '1'; //流单类型
        //确定
        $scope.ok = function (){
            uri.send({
                url: uri.action_order_droporderabort,
                data: {
                    abortType: $scope.xtype,
                    reason: $scope.remark,
                    orderNumber: modalData.orderInfo.orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('流单成功~!');
                    $modalInstance.close();
                }else{
                    $scope.isDisabled = false;
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalMergeOrderController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri, alertService) {
        $scope.modalData  = modalData;
        $scope.courierOrderInfo = null; //闪送员订单信息
        $scope.paramData = {
            currentOrderId: modalData.orderInfo.orderId,// 当前订单ID
            orderIds:'', // 闪送员订单ID
            courierMobile:'', // 闪送员手机号
        }
        console.log(modalData);
        //获取闪送员订单信息
        $scope.getCourierOrderInfo = function(){
            if(!$scope.paramData.courierMobile){
                alertService.warning('手机号不能为空');
                return ;
            }
            uri.send({
                url: uri.action_courier_orderInfo,
                data: {
                    orderNumber: modalData.orderInfo.orderNumber,// 当前订单ID
                    courierMobile: $scope.paramData.courierMobile
                }
            }).then(function(res){
                if(res.status == 200){
                    var ds = res.data;
                    $scope.courierOrderInfo = ds;
                    if(ds && ds.length){
                        var ids = [];
                        //构造请求参数ID
                        for(var i = 0; i< ds.length; i++){
                                ids.push(ds[i].orderId);
                        }
                        $scope.paramData.orderIds=ids.join(',');
                    }
                    alertService.success('闪送员订单信息获取成功~!');
                }else{
                    alertService.danger(res.err);
                }
            });
        }
        //确定
        $scope.ok = function (){
            uri.send({
                url: uri.action_merge_order,
                data: $scope.paramData
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('并单成功~!');
                    $modalInstance.close();
                }else{
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalModifyMobileController', ['$scope', '$modalInstance','$http','modalData','UriService','AlertService',
    function( $scope, $modalInstance, $http, modalData, uri, alertService) {
        $scope.isDisabled = false;
        $scope.modalData  = modalData;
        $scope.mobile = ''; //新手机号
        //确定
        $scope.ok = function (){
            $scope.isDisabled = true;
            uri.send({
                url: uri.action_order_mobilechange,
                data: {
                    infoId: modalData.order.infoId || 0,
                    target: modalData.type.id,
                    orderNumber: modalData.orderNumber,
                    mobile: $scope.mobile
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('修改成功~!');
                    $modalInstance.close();
                }else{
                    $scope.isDisabled = false;
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalOrderChangeScoreController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri, alertService) {
        $scope.modalData  = modalData;
        $scope.scoreAdjustReason = {}; //积分调整  A,B,C,D,E
        //确定
        $scope.ok = function (){
            var rs = buildReason();
            uri.send({
                url: uri.action_order_score,
                data: {
                    scoreAdjustReason: rs,
                    orderNumber: modalData.orderInfo.orderNumber,
                    needPunish: 0 // 确认积分1 调整积分0
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('积分调整成功~!');
                    $modalInstance.close();
                }else{
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };
        //构造请求参数
        function buildReason(){
            var r = [],re = $scope.scoreAdjustReason;
            for(var key in re){
                if(re[key]){
                    r.push(key);
                }
            }
            return r.join(',');
        }

    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalOrderSureScoreController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri, alertService) {
        $scope.modalData  = modalData;
        //确定
        $scope.ok = function (){
            uri.send({
                url: uri.action_order_score,
                data: {
                    orderNumber: modalData.orderInfo.orderNumber,
                    needPunish: 1 // 确认积分1 调整积分0
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('积分确认成功~!');
                    $modalInstance.close();
                }else{
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalPickupController', ['$scope', '$modalInstance','$http','modalData','UriService','AlertService',
    function( $scope, $modalInstance, $http, modalData, uri, alertService) {
        $scope.modalData  = modalData;
        $scope.pickupCode = modalData.orderInfo.pickupPassword; //取件码
        //确定
        $scope.ok = function (){
            uri.send({
                url: uri.action_order_pickup,
                data: {
                    pickupPassword: modalData.orderInfo.pickupPassword,
                    orderNumber: modalData.orderInfo.orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('取件成功~!');
                    $modalInstance.close();
                }else{
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalPunishmentController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri, alertService) {
        $scope.modalData  = modalData;
        $scope.param = {
            punishType: 1,
            number:'',
            remark:'',
            orderNumber: modalData.orderInfo.orderNumber
        };
        $scope.list={
            numberlist:[]
        }
        //获取处罚类型
        $scope.loadPunishType = function (type){
            uri.send({
                url: uri.action_order_punishment_type,
                data: {
                    type: type
                }
            }).then(function(res){
                if(res.status == 200){
                    $scope.list.numberlist = res.data;
                    alertService.success("处罚类型加载完成");
                }else{
                    alertService.danger(res.err);
                }
            });
        }
        //初始化处罚类型 - 警告!
        $scope.loadPunishType($scope.param.punishType);
        //确定
        $scope.ok = function (){
            console.log($scope.param);
            uri.send({
                url: uri.action_order_punishment,
                data: $scope.param
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('处罚操作成功~!');
                    $modalInstance.close();
                }else{
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalSecondPushOrderController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function( $scope, $modalInstance, modalData, uri, alertService) {
        $scope.modalData  = modalData;
        $scope.punishType = 'false';
        $scope.remark = "";

        //确定
        $scope.ok = function (){
            if(!$scope.remark){alertService.warning("备注不能为空！");return ;};
            uri.send({
                url: uri.action_second_pushorder,
                data: {
                    remark:$scope.remark,
                    punish:$scope.punishType,
                    orderNumber: modalData.orderInfo.orderNumber
                }
            }).then(function(res){
                if(res.status == 200){
                    alertService.success("操作成功");
                    $modalInstance.close();
                }else{
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };


    }]);

})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.order').
    controller('ModalSubsidyController', ['$scope', '$modalInstance','modalData','UriService','AlertService',
    function($scope, $modalInstance, modalData, uri, alertService) {
        //传入窗口的数据
        $scope.modalData  = modalData;
        //表单参数 
        $scope.param = {
            orderNumber: modalData.orderInfo.orderNumber,
            category: '',   //补贴的用户类型
            type:'',        //补贴类型
            amount: '',      //补贴金额
            name: '',   //补贴客户名
            renewalWay: '',  //补款方式，支付宝？银行?...
            customerAccount: '',   //客户收款账号
            remark:''           //补贴备注
        }
        //下拉列表 
        $scope.list = {
            usertype: [],
            takemoneytype: [],
            type: [],
            temptype: [],
            debit: []  
        }
        //补贴用户类型切换时触发
        $scope.userChange = function(){
            //根据用户类型加载对应的补贴类型,更新$scope.param.type值
            if($scope.param.category == 3){
               $scope.list.type = $scope.list.debit;
            }else{
               $scope.list.type = $scope.list.temptype; 
            }
        }
        //确定
        $scope.ok = function (){
            uri.send({
                url: uri.action_order_subsidymain,
                data: $scope.param
            }).then(function(res){
                if(res.status == 200){
                    alertService.success('操作成功~!');
                    $modalInstance.close();
                }else{
                    $scope.isDisabled = false;
                    alertService.danger(res.err);
                }
            });
        };
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };

        //获取补贴用户类型
        uri.send({
            url: uri.action_subsidy_usertype,
            data: {
                orderNumber: modalData.orderInfo.orderNumber,
            }
        }).then(function(res){
            if(res.status == 200){
                $scope.list.usertype = res.data;
            }else{ 
                console.log(res.err);
            }
        });
        //获取补贴类型
        uri.send({
            url: uri.action_subsidy_type
        }).then(function(res){
            if(res.status == 200){
                $scope.list.type = res.data;
                $scope.list.temptype = res.data;
            }else{ 
                console.log(res.err);
            }
        });
        //获取补贴账户类型
        uri.send({
            url: uri.action_subsidy_moneytype
        }).then(function(res){
            if(res.status == 200){
                $scope.list.takemoneytype = res.data;
            }else{ 
                console.log(res.err);
            }
        });
        //获取扣款类型
        uri.send({
            url: uri.action_subsidy_courierDebit
        }).then(function(res){
            if(res.status == 200){
                $scope.list.debit = res.data;
            }else{ 
                console.log(res.err);
            }
        });

    }]);

})(window.angular);


/**
 * 用户权限控制指令
 * 使用方法：在dom 元素添加属性  has-permission="1001" ,1001为权限编号
 */
(function(angular) {
    'use strict';
    angular.module('iss.permission')
    .directive('hasPermission',['PermissionService','isDevelop',
    function(permissionService, isDevelop) {

        return {
            link: function(scope, element, attrs) {
                /**
                 * 执行权限更新
                 */ 
                function updatePermission() {
                    //[注]开发环境不进行权限处理
                    if(!isDevelop && !permissionService.hasPermission(attrs.hasPermission)){
                      element.empty().remove();
                    }
                }
                //初始化权限
                updatePermission();
                //监听权限变更事件
                scope.$on('permissionsChanged', updatePermission);
            }
        };
    }]);
})(window.angular);

(function(angular) {
    'use strict';
    angular.module('iss.permission')
    .service('PermissionService', ['$rootScope', function ($rootScope) {
        var userPermission = "";
        /**
         * 获取权限
         */
        this.getUserPermissions = function(){
            return userPermission;
        };
        /**
         * 设置权限 
         */
        this.setUserPermissions = function(per){
            userPermission = per;
            //广播事件,通知监听者更新权限
            $rootScope.$broadcast('permissionsChanged');
        };
        /**
         * 校验是否有权限
         */
        this.hasPermission = function(per){
            if(!angular.isString(per)){
                throw "hasPermission value must be a string.";
            }
            per = per.replace(/ /g,'');
            //[注] userPermission 字符串 集合
            if(per && userPermission.indexOf(per) != -1){
                return true;
            }
            return false;
        };

    }]);
})(window.angular);

(function(angular) {
  'use strict';
  angular.module('iss.searchbar').
  controller('SearchBarController', ['$rootScope','$scope','SearchBarDatePickerService','UriService','PagingService',
  function($rootScope,$scope,datepicker,UriService,PagingService) {
        //搜索缺省参数
        resetParam();
        function resetParam(){
            $scope.param = {
                from: 1,
                type:'0', // 查所有订单
                cityId : '',
                userType : '',
                channel : '',
                travelWay : '',
                key : '',
                searchValue: '',
                st : '',
                et : '',
                pageNo: 1
            };
        }
        //构造列表数据
        $scope.list = {
            citys : [],
            usertypes: [],
            channels: [],
            traffics: [],
            others: []
        };
        //日期配制
        $scope.dateOptions = datepicker.options;
        //日期选择回调
        $scope.dateCallback = function(start, end, label){
            var patten = 'YYYY-MM-DD';
            $scope.param.st = start.format(patten);
            $scope.param.et = end.format(patten);
        }
        //重置搜索条件
        $scope.reset = function(){
            resetParam();
        }

        //搜索事件
        $scope.search = function(){
            //获取所有交通工具
            //添加工作空间
            $rootScope.addWorkspace({
                name:'搜索结果',
                active:true,
                isRemove: true,
                content: UriService.page_order_list,
                data:{
                    param: $scope.param
                }
            });

        }
        //获取所有城市
        UriService.send({
            url: UriService.action_citylist
        }).then(function(res) {
            if(res.status===200){
                $scope.list.citys = res.data;
                // $scope.param.mcity = $scope.list.citys[0].id;//默认值[注]要和前台显示格式对应上
            }
        });
        //获取所有用户类型
        UriService.send({
            url: UriService.searchBarUsertypelist
        }).then(function(res) {
            if(res.status===200){
                $scope.list.usertypes = res.data;
            }
        });

        //获取所有渠道
        UriService.send({
            url: UriService.action_searchBarChannellist
        }).then(function(res) {
            if(res.status===200){
                $scope.list.channels = res.data;
            }
        });
        //获取所有交通工具
        UriService.send({
            url: UriService.action_searchBarTrafficlist
        }).then(function(res) {
            if(res.status===200){
                $scope.list.traffics = res.data;
            }
        });
        //获取搜索条上其它查询条件, 如：系统单号
        UriService.send({
            url: UriService.searchBarOtherlist
        }).then(function(res) {
            if(res.status===200){
                $scope.list.others = res.data;
                 $scope.param.key = $scope.list.others[0].id;//默认值[注]要和前台显示格式对应上
            }
        });
    }]);
})(window.angular);
(function(angular) {
    'use strict';
    angular.module('iss.searchbar').
    service('SearchBarDatePickerService', function($http, $q) {
    //日期配制
        this.options = {
            ranges: {
              '今天': [moment(), moment()],
              '昨天': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
              '前7天': [moment().subtract(6, 'days'), moment()],
              '前30天': [moment().subtract(29, 'days'), moment()],
              '本月': [moment().startOf('month'), moment().endOf('month')],
              '上月': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],
              '全部': [moment('2000-01-01'), moment()]
            },
            locale: {
              format: 'YYYY-MM-DD HH:mm',
              separator: ' 至 ',
              applyLabel: '确定',
              cancelLabel: '取消',
              fromLabel: 'From',
              toLabel: 'To',
              customRangeLabel: '自定义',
              daysOfWeek: ['日', '一', '二', '三', '四', '五','六'],
              monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
              firstDay: 1
            }, 
            showDropdowns: true
        };
    });

})(window.angular);
(function(angular) {
    'use strict';
    angular.module('iss.tabs').
    controller("TabsParentController", ['$state','$scope', '$rootScope', 'UriService','TabService',
    function ($state, $scope, $rootScope, uri, tabService) {
        //重置所有标签状态
        function setAllInactive() {
                cForEach(function(){
                    this.active = false;
                });
        };
        //根据ID删除一个TAB
        function removeTabById(id) {
            cForEach(function(index, array){
                if(this.id == id){
                    array.splice(index,1);
                    //设置最后一个为当前操作空间
                    var tab = array[array.length-1];
                    tab.active = true;
                }
            });
        };
        
        //根据ID打开指定操作空间
        function wakeupTabById(id){
            cForEach(function(index, array){
                if(this.id == id){
                    this.active = true;
                }
            });
        }
        //通用接口
        function cForEach(callback){
            angular.forEach($scope.workspaces, function(workspace,index,array) {
                callback.call(workspace, index, array);
            });
        }
        // Tab工作空间对象数组
        $scope.workspaces = [];
        /**
         * 添加一个操作空间
         * @param entity 工作空间对象
         * {id:1,name:'space1',active:true,content:'url',data:{空间模板对应的数据}}
         */
        $rootScope.addWorkspace = function (entity) {
            setAllInactive();
            if(entity.id && entity.id.match(/callcenter/)){
                //call center to do .
                $scope.$apply(function(){
                    $scope.workspaces.push(entity);
                });
            }else{
                // this is normal .
                if(!entity.id){
                    //default Id is current time
                    entity.id = moment().format('x');
                }
                $scope.workspaces.push(entity);
            }
        };
        /**
         * 删除一个操作空间
         */
        $rootScope.rmoveWorkspaceById = function (id) {
            setAllInactive();
            removeTabById(id);
        };
        /**
         * 根据ID 激活某个操作空间
         */
        $rootScope.wakeUpWorkspaceById = function (id) {
            setAllInactive();
            wakeupTabById(id);
        };
        //选择操作空间标签事件
        $scope.selectWorkspace = function(entity){
            //TODO .
        }
    }]);

})(window.angular);

 /**
  * 动态添加标签 内容生成指令
  * @attr tpl 模板地址
  * @scope.workspace.data 对应模板的数据
  */
 (function(angular) {
    'use strict';
    angular.module('iss.tabs').
    directive("dynamicTabcontent", ['$http',
        function($http) {

            return {
                restrict : 'EA',
                replace: true,
                template : '<ng:include src="tpl"></ng:include>',
                link : function(scope, elem, attr) {
                    scope.tpl = attr.tpl;
                    if(scope.workspace && scope.workspace.data){
                        scope.data = scope.workspace.data;
                    }
                }
            }
        }]);
})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.tabs').
    service('TabService', ['UriService', function( uriService) {

    }]);
})(window.angular);


(function(angular) {
    'use strict';
    angular.module('iss.workorder')
    .controller('DetailController',['$scope', 'UriService','CascadeService', 'AlertService',
    function($scope, UriService, cascadeService, alertService) {
        var id = $scope.data.id;
        var ticketType = -1;
        $scope.list = {}; // * 初始化三级级联数据对象
        $scope.param = {}; // * 同上 

        var getData = function(id) {
            UriService.send({
                url : UriService.action_workOrderDetail,
                data : {
                    "id":id
                }
            }).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
                var ticket = res.data.ticketDataVo;
                $scope.ticket = ticket;
                $scope.user = res.data.ticketUserInfo;
                $scope.courier = res.data.ticketCourierInfo;
                $scope.flag = res.data.flag;

                //SSY(1,"闪送员"),XTYH(2,"系统用户"),NOTXTYH(3,"新用户");
                //转换后   0闪送员|1客户
                ticketType = (ticket.userType==1?0:1);
                var defaultValue = [];

                // 级联回显数据
                if(ticket.qaQroupId1) {
                    defaultValue.push(ticket.qaQroupId1);
                }
                if(ticket.qaQroupId2) {
                    defaultValue.push(ticket.qaQroupId2);
                }
                if(ticket.qaQroupId3) {
                    defaultValue.push(ticket.qaQroupId3);
                }

                /**
                 * 初始化三级级联
                 */
                cascadeService.bulidCascadeSteps($scope, {
                    url: UriService.action_ticket_cascade,
                    data:{
                        pid: 0,
                        qaType: ticketType
                    },
                    resultKey: 'ticketQaGroups',
                    default: defaultValue
                });
            });
        };
        getData(id);
        
        //备注操作
        $scope.remark = function() {
            UriService.send({
                url : UriService.action_updateTicket,
                data : {
                    "id":$scope.ticket.id,
                    "status":-1,
                    "remark":$scope.ticket.remark
                }
            }).then(function(res) {
                if(200 == res.status) {
                    alertService.success("保存成功！");
                    getData(id);
                }else {
                    alertService.warning("保存失败！");
                }
            });
        };

        //保存操作
        $scope.submit = function(status) {
            UriService.send({
                url : UriService.action_saveTicket,
                data : {
                    "id":$scope.ticket.id,
                    "mobile":$scope.ticket.mobile,
                    "orderNumber":$scope.ticket.orderNumber,
                    "memberType":ticketType,
                    "qaQroupId1":$scope.param.qa1,
                    "qaQroupId2":$scope.param.qa2,
                    "qaQroupId3":$scope.param.qa3,
                    "remark":$scope.ticket.remark,
                    "status":status
                }
            }).then(function(res) {
                if(200 == res.status) {
                    alertService.success("保存成功！");
                    getData(id);
                }else {
                    alertService.warning("保存失败！");
                }
            });
        };


    }]);
})(window.angular);
(function(angular) {
  	'use strict';
    //workorder eject
    angular.module('iss.workorder')
	.controller('EjectController',['$scope', '$rootScope', 'UriService', '$uibModal', 'AlertService',
    function($scope, $rootScope, UriService, $uibModal, alertService) {
        var tel = $scope.data.tel;
        //获取工单弹屏信息
        var getData = function(tel) {
            UriService.send({
                url : UriService.action_ticketEject,
                data : {
                    "mobile":tel
                }
            }).then(function(res) {
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
                var data = res.data;
                $scope.userInfo = data.ticketUserInfo;
                if(null != data.ticketUserInfo && null != data.ticketUserInfo.type) {
                    $scope.saveFlag = 0;
                }else {
                    if(null != data.ticketUser) {
                        $scope.saveFlag = 0;
                        $scope.userInfo.name = data.ticketUser.name;
                        $scope.userInfo.city = data.ticketUser.city;
                    }else {
                        $scope.saveFlag = 1;
                    }
                }

                $scope.courierInfo = data.ticketCourierInfo;
                $scope.orderList = data.ticketOrderInfoList;
                $scope.ticketList = data.ticketList;
            });
        }
        getData(tel);

        //保存用户
        $scope.saveUser = function() {
            UriService.send({
                url : UriService.action_saveTicketUser,
                data : {
                    "name":$scope.userInfo.name,
                    "cityName":$scope.userInfo.city,
                    "mobile":tel
                }
            }).then(function(res) {
                if(200 == res.status) {
                    alertService.success("保存成功！");
                    getData(tel);
                }else {
                    alertService.warning("保存失败！");
                }
            });
        };

        //工单详情页面
        $scope.ticektDetail = function(ticketNumber, id) {
            $rootScope.addWorkspace({
                name:'工单详情[' + ticketNumber.substr(-6) + ']',
                active:true,
                isRemove: true,
                content:UriService.page_ticket_detail,
                data:{
                    "id":id
                }
            });
        };
        
        //点击新建工单
        $scope.newWorkOrder = function(orderNumber){
            $uibModal.open({
                windowTopClass: 'imodel-top-css',
                templateUrl: UriService.page_new_work_order,
                controller: 'NewWorkOrderController',
                resolve: {
                    modalData: function () {
                      return {
                        "orderNumber":orderNumber,
                        "tel":$scope.data.tel
                      };
                    }
                }
            }).result.then(function() {
                getData(tel);
            }, function() {
                getData(tel);
            });
        };

        //查看订单详情
        $scope.orderDetail = function(orderNumber) {
            UriService.send({
                url:UriService.action_orderlist,
                data:{
                    "st":"2015-01-01",
                    "et":moment().format('YYYY-MM-DD'),
                    "key": "1001",
                    "searchValue": orderNumber
                }
            }).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
                var tempOrderEntity = res.data.result[0];
                $rootScope.addWorkspace({
                    name:'订单['+tempOrderEntity.orderInfo.orderNumber.substr(-6)+']',
                    active:true,
                    isRemove: true,
                    content: UriService.order_detail,
                    data:{
                        orderEntity: tempOrderEntity
                    }
                });
            });
        };
       
    }]);

})(window.angular);
(function(angular) {
  	'use strict';
    //Map
    angular.module('iss.workorder')
    .controller('baiduMap',['$scope', '$rootScope', 'UriService', 'AlertService',
    function($scope, $rootScope, UriService, alertService) {
    	var orderNumber = $scope.data.orderNumber;
        var time = $scope.data.time;
        UriService.send({
            url:UriService.action_mapInfo,
            data:{
                "orderNumber":orderNumber
            }
        }).then(function(res) {
            if(0 == res.status) {
                alertService.warning(res.err);
            }

            if(undefined == res.data || undefined == res.data.order) {
                alertService.warning('地图初始化失败！');
                return;
            }else if(null != res.data.order.courierMobile) {
                alertService.warning('该订单已有闪送员接单！');
            }
            var order = res.data.order;
            var carrier = res.data.carrierMapDto;
            var user = res.data.bindingUserVo;
            var operatorId = res.data.operatorId;
            var travelArray = ['未指定工具','电动车','摩托','公交','汽车'];
            // Init Map
            var map = new BMap.Map("map" + $scope.data.time);
            map.addControl(new BMap.NavigationControl());               // 添加平移缩放控件
            map.addControl(new BMap.ScaleControl({anchor: BMAP_ANCHOR_TOP_LEFT}));                    // 添加比例尺控件
            //map.addControl(new BMap.OverviewMapControl());              //添加缩略地图控件
            map.enableScrollWheelZoom();                            //启用滚轮放大缩小
            map.addControl(new BMap.MapTypeControl());          //添加地图类型控件
            map.setCurrentCity("北京");          // 设置地图显示的城市 此项是必须设置的


            //标注客户位置并设置地图中心点
            var lat = order.fromLat;
            var lng = order.fromLng;
            var fromAddress = order.fromAddr;
            var ccontent = '<h4>客户信息</h4>' + '<div style="margin-top:5px;"><strong style="color:red">客户地址:'+fromAddress
                +'</strong></div>';
            var infoWindow1 = new BMap.InfoWindow(ccontent);
            var point = new BMap.Point(lng,lat);
            map.centerAndZoom(point, 14);//查看五公里范围内的闪送员，比例尺固定14
            var myIcon = new BMap.Icon("/common/images/customer_48.png", new BMap.Size(48, 48), {
                // 指定定位位置。
                // 当标注显示在地图上时，其所指向的地理位置距离图标左上
                // 角各偏移10像素和25像素。您可以看到在本例中该位置即是
                // 图标中央下端的尖角位置。
                offset: new BMap.Size(10, 25),
                // 设置图片偏移。
                // 当您需要从一幅较大的图片中截取某部分作为标注图标时，您
                // 需要指定大图的偏移位置，此做法与css sprites技术类似。
                imageOffset: new BMap.Size(0, 0)   // 设置图片偏移
            });
            var marker1 = new BMap.Marker(point,{icon: myIcon});
            map.addOverlay(marker1);
            //创建信息窗口
            marker1.addEventListener("click", function(){this.openInfoWindow(infoWindow1);});
            var circle = new BMap.Circle(point,5000,{fillColor:"black", strokeWeight: 1 ,fillOpacity: 0.1, strokeOpacity: 0.1});
            map.addOverlay(circle);

            //绑定闪送员处理事件


            //设置闪送员数量和位置
            $scope.online3H = carrier.online3H;
            $scope.online20Min = carrier.online20Min;
            $scope.unavailable = carrier.unavailable;
            $scope.working = carrier.working;
            $scope.forbidden = carrier.forbidden;
            for(var index in carrier.carrierList) {
                var c = carrier.carrierList[index];
                var cpoint = new BMap.Point(c.latitude, c.longitude);
                var search = false;
                addMarker(cpoint, map, c, orderNumber, search, travelArray, operatorId, order);
            }
        });

        /*标注闪送员方法start*/
        function addMarker(point, map, carrier, orderNumber, search, travelArray, operatorId, order) {
            var blocked = false;
            var atWork = carrier.atWork;
            var unavailable = false;
            var volatile = false;
            var travelWay = carrier.travelWay;

            var imageURL = "/common/images/travelWay.png";

            // X交通工具偏移
            var offsetX = 0;
            if (travelWay > 0) {
                offsetX = Math.log(travelWay) / Math.log(2) + 1;
            }
            // Y颜色偏移
            var offsetY= 0;
            // 图标尺寸
            var iconSize=24;

            if(atWork){
                offsetY = 1;
            } else {
                if(carrier.status == '01'){
                    offsetY = 2;
                    blocked = true;
                }else if (carrier.status == '05') {
                    offsetY = 3;
                    //暂时不可用的闪送员（2小时内不可用）
                    unavailable = true;
                }else if (carrier.status == '06') {
                    offsetY = 4;
                    //游离状态的闪送员
                    volatile = true;
                }
            }

            var myIcon = new BMap.Icon(imageURL, new BMap.Size(24, 24), {
                // 指定定位位置。
                // 当标注显示在地图上时，其所指向的地理位置距离图标左上
                // 角各偏移10像素和25像素。您可以看到在本例中该位置即是
                // 图标中央下端的尖角位置。
                offset: new BMap.Size(0, 0),
                // 设置图片偏移。
                imageOffset: new BMap.Size(-iconSize * offsetX, -iconSize * offsetY)   // 设置图片偏移
            });
            var marker = new BMap.Marker(point, {icon: myIcon});
            map.addOverlay(marker);
            if(search){
                marker.setAnimation(BMAP_ANIMATION_BOUNCE); //跳动的动画
            }
            var endHTML = "</div>";
            var carrierName = carrier.name;
            if(!blocked){
                if(atWork){
                    carrierName = '<span style="color:black;">'+carrierName+'[闪送中]</span>';
                } else if (unavailable) {
                    //暂时不可用的闪送员
                    carrierName = '<span style="color:black;">'+carrierName+'[暂不接单]</span>';
                    endHTML= '<br><button class="btn btn-success" onclick="markAsAvailable(' + carrier.loginName + ');">恢复接单</button></div>';
                } else{
                    endHTML = '<input type="text" id="' + carrier.loginName + '" size="30"/>&nbsp;&nbsp;'
                    + '<button class="btn btn-success" type="button" onclick="assign(\'' + operatorId + '\',' + carrier.loginName + ',\'' + orderNumber + '\');">指派给他</button>&nbsp;&nbsp;'
                    + '<button class="btn btn-success" type="button" onclick="markAsUnavailable(' + carrier.loginName + ',\'' + operatorId + '\',\'' + orderNumber + '\',' +'true);">暂不接单</button>&nbsp;&nbsp;'
                    + '<button class="btn btn-success" type="button" onclick="markAsUnavailable(' + carrier.loginName + ',\'' + operatorId + '\',\'' + orderNumber + '\',' +'false);">备注</button>&nbsp;&nbsp;'
                    + '<button class="btn btn-success" type="button" onclick="finish(\'' + orderNumber + '\');">结案</button>&nbsp;&nbsp;'
                    + '<button class="btn btn-success" type="button" onclick="dialoutInMap(\'' + operatorId + '\',\'' + carrier.loginName + '\');" id="dialout'+ operatorId + '">呼叫</button>&nbsp;&nbsp;'
                    + '<button class="btn btn-danger"  type="button" onclick="hangupInMap(\'' + operatorId + '\');">挂断</button>&nbsp;&nbsp;'
                    + '</div>';
                }
            }else {
                carrierName = '<span style="color:black;">'+carrierName+'[被冻结]</span>';
            }
            var content = '<h4>闪送员['+carrier.name+']信息</h4>' + '<div style="margin-top:5px;"><strong style="color:red">姓名:'
                +carrierName + '(' + travelArray[offsetX] +'),手机号码:'+carrier.loginName+',距离客户:'+carrier.distance+'km,位置上传时间:'+carrier.latestLocationRecordDate+'</strong>'+endHTML;

            var infoWindow1 = new BMap.InfoWindow(content);
            marker.addEventListener("click", function(){
                this.openInfoWindow(infoWindow1);
            });

            //划线
            var takedUserLoginName = order.courierMobile;
            if(carrier.loginName == takedUserLoginName) {
                var status = carrier.status;

                if(status == '30' || status == '32' || status == '40') { //取件前
                    var fromLat = order.fromLat;
                    var fromLng = order.fromLng;
                    var fromPoint = new BMap.Point(fromLng,fromLat);

                    var polyline = new BMap.Polyline([point, fromPoint],
                        {strokeColor:"red", strokeWeight:3, strokeOpacity:0.5}
                    );
                    map.addOverlay(polyline);
                }
            }
        }
        /*标注闪送员方法end*/

        /*提交表单方法start*/
        //恢复接单
        window.markAsAvailable = function(loginname) {
            UriService.send({
                url:UriService.action_markAsAvailable,
                restdata:{
                    "loginname": loginname
                }
            }).then(function(res){
                if(200 == res.status) {
                    alert('操作成功！');
                }else {
                    alert('操作失败！');
                }
            });
        };
        //暂不接单
        window.markAsUnavailable = function(loginname, operatorId, orderNumber, needToMark) {
            if(needToMark) {
                //创建工单并标注暂不接单
                UriService.send({
                    url:UriService.action_markAsUnavailable,
                    data:{
                        "loginname":loginname,
                        "memo":$("#"+loginname).val()
                    }
                }).then(function(res){
                    if(200 == res.status) {
                        if('' != $.trim($('#'+loginname).val())) {
                            $.post(UriService.action_saveTicket, {"operatorId": operatorId, "mobile":loginname, "orderNumber":orderNumber, "remark":$("#"+loginname).val(), autoType:2}, function(r){
                                successOrFail(r);
                            });
                        }else {
                            alert('请输入备注内容！');
                        }
                    }else {
                        alert('操作失败！');
                    }
                });
            }else {
                //只创建工单
                if('' != $.trim($('#'+loginname).val())) {
                    $.post(UriService.action_saveTicket, {"operatorId": operatorId, "mobile":loginname, "orderNumber":orderNumber, "remark":$("#"+loginname).val(), autoType:2}, function(r){
                        successOrFail(r);
                    });
                }else {
                    alert('请输入备注内容！');
                }
            }
        };
        //指派给他
        window.assign = function(operatorId, mobile, orderNumber) {
            $.post(UriService.action_orderAssign, {"remark":$("#"+mobile).val(), "takedMobile":mobile, "orderNumber":orderNumber}, function(r){
                var res = eval("(" + r + ")");
                if(200 == res.status) {
                    $.post(UriService.action_saveTicket, {"operatorId":operatorId, "mobile":mobile, "orderNumber":orderNumber, autoType:3}, function(r){
                        successOrFail(r);
                    });
                }else {
                    alert(res.err);
                }
            });
        };
        //结案
        window.finish = function(orderNumber) {
            $.post(UriService.action_finishPending, {"orderNumber":orderNumber}, function(r){
                successOrFail(r);
            });
        };
        //呼出
        window.dialoutInMap = function(operatorId, mobile) {
            $('#dialout'+operatorId).attr('disabled', true);
            if(softphoneBar) {
                //TODO
                softphoneBar.dialout(/*mobile*/18601911202);
            }else {
                alert('电话条未初始化，请登录重试！');
            }
        };
        //挂机
        window.hangupInMap = function(operatorId) {
            $('#dialout'+operatorId).attr('disabled', false);
            phone.hangup();
        };
        //呼叫成功创建工单
        window.callSuccessfully = function(item){
            if(true == item.Link) {
                $.post(UriService.action_saveTicket, {"operatorId":operatorId, "mobile":item.FromDid, "orderNumber":orderNumber}, function(r){
                    successOrFail(r);
                });
            }
        };
        window.successOrFail = function(r) {
            var res = eval("(" + r + ")");
            if(200 == res.status) {
                alert("操作成功！");
            }else {
                alert("操作失败！");
            }
        };
        /*提交表单方法end*/

    }]);

})(window.angular);
(function(angular){
    //MyTicket
    angular.module('iss.workorder')
    .controller('MyTicketController',['$scope', '$rootScope', 'UriService', 'AlertService',
    function($scope, $rootScope, UriService, alertService) {
    	var getMyTicket = function(type) {
	    	UriService.send({
	    		url:UriService.action_myTicket,
	    		data:{
	    			"status":type
	    		}
	    	}).then(function(res){
                if(200 != res.status) {
                    alertService.warning(res.err);
                    return;
                }
	    		$scope.ticketList = res.data.list;
                $scope.count1 = res.data.count1;
                $scope.count2 = res.data.count2;
                $scope.count3 = res.data.count3;
	    	});
    	};
    	//加载默认数据
    	getMyTicket(1);
    	$scope.getMyTicket = function(type) {
    		getMyTicket(type);
    	};
    }]);
})(window.angular);
(function(angular) {
    'use strict';
    angular.module('iss.workorder')
    .controller('NewWorkOrderController',['$scope', '$rootScope', 'UriService', 'modalData', '$modalInstance','CascadeService', 'AlertService',
    function($scope, $rootScope, UriService, modalData, $modalInstance, cascadeService, alertService) {
        $scope.orderNumber = modalData.orderNumber;
        $scope.tel = modalData.tel;
        //保存操作
        $scope.submit = function(status) {
            UriService.send({
                url : UriService.action_saveTicket,
                data : getParamData(status)
            }).then(function(res) {
                if(200 == res.status) {
                    alertService.success("操作成功！");
                    //数据回显
                    $modalInstance.close({
                        list: $scope.list,
                        data: getParamData(status)
                    });
                }else {
                    alertService.warning(res.err);
                }
            });
        };
        //获取提交参数
        function getParamData(status){
            return {
                    "mobile": $scope.tel,
                    "orderNumber": $scope.orderNumber,
                    "memberType": $scope.ticketType,
                    "qaQroupId1": $scope.param.qa1,
                    "qaQroupId2": $scope.param.qa2,
                    "qaQroupId3": $scope.param.qa3,
                    "remark": $scope.remark,
                    "status": status
                };
        }
        //取消
        $scope.cancel = function (){
            $modalInstance.dismiss('cancel');
        };
        // 用户1 or 闪送员0 (级联类型)
        $scope.ticketType = 1;

        //切换工单类型
        $scope.changeType = function(type) {
            $scope.ticketType = type;
            initCascade(type);
        };
        //默认初始化级联类型
        initCascade(1);

        /**
         * 三级级联初始化
         */
        function initCascade(type) {
            cascadeService.bulidCascadeSteps($scope,{
                url: UriService.action_ticket_cascade,
                data:{
                    pid: 0,
                    qaType: type
                },
                resultKey: 'ticketQaGroups'
            });
        };
    }]);


})(window.angular);
(function(){
    //Trail
    angular.module('iss.workorder')
    .controller('trail',['$scope', '$rootScope', 'UriService', 'AlertService','MapService',
    function($scope, $rootScope, UriService, alertService, mapService) {
        $scope.orderNumber = $scope.data.orderNumber;
/**
 * 懒加载处理，确保地图能正常显示
 */
mapService.lazyLoading(function(){
        //初始化地图
        mapService.initMap();

        //获取订单轨迹信息
        UriService.send({
            url : UriService.action_trailInfo,
            data : {
                "orderNumber":$scope.orderNumber
            }
        }).then(function(res){
            var order = res.data.order;
            if(!order) {
                alertService.warning('轨迹地图初始化错误!', false);
                return;
            }
            var map = mapService.map;
            /**
             * 创建初始POI点，即客户下单位置
             */
            var frompoint = new BMap.Point(order.fromLng, order.fromLat); //下单点
            var grabpoint = new BMap.Point(order.grabLng, order.grabLat); //抢单点
            var readypoint = new BMap.Point(order.readyLng, order.readyLat); //就位点
            var fetchpoint = new BMap.Point(order.fetchLng, order.fetchLat); //取件点

            map.centerAndZoom(frompoint, 13);

            //----------------------------
            // 取件图标
            //----------------------------            
            var quIcon = new BMap.Icon("/common/images/poi.png", new BMap.Size(25,40),{  
                // 指定定位位置。 
                // 当标注显示在地图上时，其所指向的地理位置距离图标左上  
                // 角各偏移10像素和25像素。您可以看到在本例中该位置即是 
                // 图标中央下端的尖角位置。  
                anchor: new BMap.Size(10, 25),
                // imageSize: new BMap.Size(100, 22),
                // 设置图片偏移。 
                // 当您需要从一幅较大的图片中截取某部分作为标注图标时，您 
                // 需要指定大图的偏移位置，此做法与css sprites技术类似。  
                imageOffset: new BMap.Size(-50, 0)   // 设置图片偏移  
            });
            var quMarker = new BMap.Marker(fetchpoint,{icon: quIcon});  // 创建标注
            map.addOverlay(quMarker);               // 将标注添加到地图中

            //----------------------------
            // 收件图标
            //----------------------------            
            var shouIcon = new BMap.Icon("/common/images/poi.png", new BMap.Size(25,40),{  
                anchor: new BMap.Size(10, 25),   
                imageOffset: new BMap.Size(-100, 0)   // 设置图片偏移  
            });
            //地址可能为多个，当一取多投时
            for(var i = 0; i<order.toAddrList.length; i++){
                var tempp = order.toAddrList[i];
                var shouMarker = new BMap.Marker(new BMap.Point(tempp.toLng, tempp.toLat),{icon: shouIcon});
                map.addOverlay(shouMarker);               // 将标注添加到地图中
                shouMarker.setAnimation(BMAP_ANIMATION_BOUNCE); 
                setTimeout(function(){
                    shouMarker.setAnimation(null); 
                },1000);
            }
            
            //----------------------------
            // 抢单图标
            //----------------------------            
            var qiangIcon = new BMap.Icon("/common/images/poi.png", new BMap.Size(25,40),{  
                anchor: new BMap.Size(10, 25),   
                imageOffset: new BMap.Size(-125, 0)   // 设置图片偏移  
            });
            var qiangMarker = new BMap.Marker(grabpoint,{icon: qiangIcon});  // 创建标注
            map.addOverlay(shouMarker);               // 将标注添加到地图中

            //----------------------------
            // 下单图标
            //----------------------------            
            var xiaIcon = new BMap.Icon("/common/images/poi.png", new BMap.Size(25,40),{  
                anchor: new BMap.Size(10, 25),   
                imageOffset: new BMap.Size(-150, 0)   // 设置图片偏移  
            });
            var xiaMarker = new BMap.Marker(frompoint,{icon: xiaIcon});  // 创建标注
            map.addOverlay(xiaMarker);               // 将标注添加到地图中

            //----------------------------
            // 终点图标
            //----------------------------            
            // var zhongIcon = new BMap.Icon("/common/images/poi.png", new BMap.Size(25,40),{  
            //     anchor: new BMap.Size(10, 25),   
            //     imageOffset: new BMap.Size(-25, 0)   // 设置图片偏移  
            // });
            // var zhongMarker = new BMap.Marker(point,{icon: zhongIcon});  // 创建标注
            // map.addOverlay(zhongMarker);               // 将标注添加到地图中

            //----------------------------
            // 起点图标
            //----------------------------            
            var qidianIcon = new BMap.Icon("/common/images/poi.png", new BMap.Size(25,40),{  
                anchor: new BMap.Size(10, 25),   
                imageOffset: new BMap.Size(0, 0)   // 设置图片偏移  
            });
            var qidianMarker = new BMap.Marker(readypoint,{icon: qidianIcon});  // 创建标注
            map.addOverlay(qidianMarker);               // 将标注添加到地图中

            //----------------------------
            // 设置 跳动的动画
            //---------------------------- 
            quMarker.setAnimation(BMAP_ANIMATION_BOUNCE);
            qiangMarker.setAnimation(BMAP_ANIMATION_BOUNCE); 
            xiaMarker.setAnimation(BMAP_ANIMATION_BOUNCE); 
            // zhongMarker.setAnimation(BMAP_ANIMATION_BOUNCE); 
            qidianMarker.setAnimation(BMAP_ANIMATION_BOUNCE); 
            //1秒后清除动画
            setTimeout(function(){
                quMarker.setAnimation(null);
                qiangMarker.setAnimation(null); 
                xiaMarker.setAnimation(null); 
                // zhongMarker.setAnimation(null); 
                qidianMarker.setAnimation(null); 
            },1000);

        });

        //请求轨迹
        UriService.send({
            url : UriService.action_trail_points,
            data : {
                "orderNumber":$scope.orderNumber
            }
        }).then(function(entity){
            var map = mapService.map;
            var routePoints = [];
            for(var i = 0; i<entity.data.length; i++){
                var pp  = entity.data[i];
                routePoints.push(new BMap.Point(pp.longitude, pp.latitude));
            }
            //生成一条轨迹线
            map.addOverlay(new BMap.Polyline(routePoints, {strokeColor: '#F00'}));

        });

});
        
    }]);
})(window.angular);

(function(angular) {
    'use strict';
    angular.module('iss.workorder')
    .controller('WorkorderListController',['$scope','$rootScope', '$state', '$stateParams', 'UriService','PagingService', '$uibModal','AlertService',
    function($scope,$rootScope, $state, $stateParams, uriService, PagingService, $uibModal, alertService) {
        $scope.data = {};
        $scope.data.marks = [];
        $scope.orderType = 1;//工单类型

        //分页初始化
        PagingService.resetPaging($scope);

         //设置分页事件
         PagingService.setPaging($scope,{
            changed: function(){
                loadPagingData({
                    status: $scope.orderType,
                    pageNo: $scope.data.paging.currentPage
                });
            }
        });
       
        //初始加载第一页数据
        $scope.hasCatchOrder = true; //领单按钮是否可用
        loadPagingData({
            status: 1, //待处理工单
            pageNo: 1
        });

        //订单详情
        $scope.data.orderDetail = function(orderNumber) {
            uriService.send({
                url:uriService.action_orderlist,
                data:{
                    "st":"2015-01-01",
                    "et":moment().format('YYYY-MM-DD'),
                    "key": "1001",
                    "searchValue": orderNumber
                }
            }).then(function(res){
                var tempOrderEntity = res.data.result[0];
                $rootScope.addWorkspace({
                    name:'订单['+tempOrderEntity.orderInfo.orderNumber+']',
                    active:true,
                    isRemove: true,
                    content: uriService.order_detail,
                    data:{
                        orderEntity: tempOrderEntity
                    }
                });
            });
        };

        //加载分页数据
        function loadPagingData(param){
            uriService.send({
                url: uriService.action_workorder_list,
                data: param
              }).then(function(res){
                    if(res.status == 200){
                        // alertService.success("工单列表数据加载成功");
                        if(param.status == 1|| param.status == 4){
                            $scope.hasCatchOrder = true;
                        }else{
                            $scope.hasCatchOrder = false;
                        }
                        var dataEntity = res.data;
                        var list = dataEntity.result;
                        $scope.data.marks = dataEntity.marks;
                        $scope.data.items = list;
                        //设置分页信息
                        PagingService.setPaging($scope,{
                            totalItems: dataEntity.total 
                        });
                    }else{
                        alertService.danger(res.err);
                    }
              });
        }

        /**
         * 领单
         */
        $scope.data.catchOrder = function(item){
            uriService.send({
                url: uriService.action_workorder_list_catchOrder,
                data: {
                    pid: item.id
                }
            }).then(function(res){
                    if(res.status == 200){
                        alertService.success('领单成功: '+item.number);
                        //领单成功重新加载列表数据
                        loadPagingData({
                            status: $scope.orderType,
                            pageNo: $scope.data.paging.currentPage
                        });
                    }else{
                        alertService.danger(res.err);
                    }
            });
        }
        /**
         * 查看工单详情
         */
        $scope.data.lookOrderDetail = function(item){
            $rootScope.addWorkspace({
                name:'工单详情[' + item.number + ']',
                active:true,
                isRemove: true,
                content:uriService.page_ticket_detail,
                data:{
                    "id":item.id
                }
            });
        }
        /**
         * 根据标签查询工单数据
         */
         $scope.isActive = [true];//缺省时第一个标签选中
        $scope.data.queryOrderByMark = function(item, index){
            $scope.isActive = [];
            $scope.isActive[index] = true; //设置标签按钮互斥
            $scope.orderType = item.id;//工单类型,待抢？取件？。。。
            loadPagingData({
                status: item.id,
                pageNo: $scope.data.paging.currentPage
            });

        }
        
}]);

})(window.angular);